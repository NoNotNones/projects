[
{
	"uri": "http://localhost:1313/projects/_index.vi/",
	"title": "Bắt đầu với Amazon VPC và AWS VPN Site to Site",
	"tags": [],
	"description": "",
	"content": "Bắt đầu với Amazon VPC và AWS VPN Site to Site Tổng quan Trong bài lab này, bạn sẽ tìm hiểu các khái niệm cơ bản và thực hành về Amazon VPC ( Virtual Private Networking ). Tìm hiểu các khái niệm chính, các tính năng trong Amazon VPC. Thực hành tạo VPC cơ bản và thực hiện cấu hình Site to Site VPN để kết nối môi trường on-premise tới môi trường VPC của AWS.\nNội dung Giới thiệu VPC Tường lửa trong VPC Các bước chuẩn bị Tạo EC2 Server Cấu hình Site-to-Site VPN Dọn dẹp tài nguyên "
},
{
	"uri": "http://localhost:1313/projects/5-vpnsitetosite/5.1-createvpnenv/",
	"title": "Create a VPN environment",
	"tags": [],
	"description": "",
	"content": "Create a VPN environment Before initiating and configuring the Site-to-Site VPN connection, we need to create a branch emulator (ASG VPN) environment like the architecture below.\nContent Create ASG VPN VPC, 2 subnets, Internet Gateway Initiate EC2 on ASG VPN VPC "
},
{
	"uri": "http://localhost:1313/projects/4-createec2server/4.1-createec2/",
	"title": "Create EC2 Server",
	"tags": [],
	"description": "",
	"content": "Create EC2 Instances in Subnets Access the AWS Management Console:\nNavigate to EC2 Click on Instances In the EC2 interface:\nSelect Instances Choose Launch instances Provide a Name and tags for the instance, enter EC2 Public\nChoose the AMI:\nSelect Quick Start Choose Amazon Linux 2 Select an AMI Select an Instance type and opt to Create a new key pair\nIn the Create key pair interface:\nSpecify the Key pair name, e.g., aws-keypair (optional name, you can set any). Choose Key pair type: RSA Select Private key file format: .pem Configure the Network:\nSelect the VPC: ASG Choose the Subnet: Public Subnet 1 Enable Auto-assign public IP For Firewall (Security Group), select Select existing security group Choose Public subnet -SG Click Launch instance Complete the instance creation\nWait for about 5 minutes until the Status check shows 2/2 checks passed\nCreate EC2 in a Private Subnet In the EC2 interface:\nSelect Instances Choose Launch instances Provide a Name and tags, enter EC2 Private\nChoose the AMI:\nSelect Quick Start Choose Amazon Linux 2 Select an AMI Make an instance type selection. Choose Key pair name: aws-keypair Configure the Network:\nSelect the VPC: ASG VPC Choose the Subnet: Private subnet 2 Disable Auto-assign public IP. If not disabling it, ensure you\u0026rsquo;ve checked the configuration for automatically allocating public IP for the subnet. Complete the instance creation:\nClick View all instances Select EC2 Private:\nChoose Details Store Private IPv4 addresses "
},
{
	"uri": "http://localhost:1313/projects/5-vpnsitetosite/5.2-vpnsitetosite/5.2.1-createvpgw/",
	"title": "Create Virtual Private Gateway",
	"tags": [],
	"description": "",
	"content": "Create Virtual Private Gateway Access to VPC\nSelect Virtual Private Gateway Select Create Virtual Private Gateway In the Create Virtual Private Gateway interface\nName tag, enter VPN Gateway Select Amazon default ASN Select Create virtual private gateway Implement Attach to VPC\nSelect Actions Select Attach to VPC In the Attach to VPC interface\nSelect VPC ASG. Select Attach to VPC Finish and observe State as Attached\n"
},
{
	"uri": "http://localhost:1313/projects/3-prerequiste/3.1-createvpc/",
	"title": "Create VPC",
	"tags": [],
	"description": "",
	"content": "Create VPC Access the AWS Management Console interface: Locate and click on VPC Choose VPC Within the VPC interface: Select Your VPC Click on Create VPC Follow these steps to create a VPC: Choose Resource and select VPC only Enter Name tag as ASG Set IPv4 CIDR to 10.10.0.0/16 ::: warning Important Note For the Tenancy configuration, it\u0026rsquo;s recommended to keep the default setting. Switching to Dedicated may restrict the creation of certain EC2 Instance types within the VPC, as they require the default tenancy. :::\nClick on Create VPC Complete the process of creating the VPC Review the details of the newly created VPC. Ensure that Enable DNS resolution and DNS Hostname is disabled: Go to Edit VPC settings Navigate to DNS settings Choose and then click Save "
},
{
	"uri": "http://localhost:1313/projects/5-vpnsitetosite/5.1-createvpnenv/5.1.1-createvpnvpc/",
	"title": "Create VPC for VPN",
	"tags": [],
	"description": "",
	"content": "Create a VPN Environment Access VPC Interface Select Your VPC Select Create VPC In the Create VPC Interface Resource: Select VPC only Name: Enter ASG VPN IPv4 CIDR block: Enter 10.11.0.0/16 Select Create VPC Successfully Create VPC Access VPC Interface Select Subnets Select Create subnet In the Create Subnet Interface Select ASG VPN VPC In the Subnet Settings Interface Subnet name: Enter VPN Public Select Availability Zone: ap-southeast-1a Select IPv4 CIDR block as 10.11.1.0/24 according to the architecture described Successfully Created VPN Public In the VPC Interface Select Subnets Select VPN Public Select Actions Select Edit Subnet Settings Execute Auto-assign IP Settings Select Enable auto-assign public IPv4 address Select Save Successful IP Allocation In the VPC Interface Select Internet Gateway Select Create Internet Gateway In the Create Internet Gateway Interface Name tag: Enter Internet Gateway VPN Select Create Internet Gateway After Creating Internet Gateway VPN Successfully and State is Detached Select Actions Select Attach to VPC Select VPC ASG VPN, VPC ID Will Be Automatically Filled In Select Attach Internet Gateway Attach Succeeds When State is Attached Create a Route Table to Route Out to the Internet Through the Internet Gateway In the VPC Interface Select Route Tables Select Create Route Table In the Create Route Table Interface Name: Enter Route table VPN - Public Select VPC named ASG VPN, VPC ID Will Be Automatically Filled In Select Create Route Table Successfully Created Route Table In the Route Table VPN - Public Interface Select Route Select Edit Route In the Edit Routes Interface Select Add Route Fill in the Destination CIDR: 0.0.0.0/0 representing the Internet In the Target section, select Internet Gateway, then select the Internet Gateway VPN we created. Internet Gateway ID Will Be Automatically Filled In Select Save Changes Complete and Test the Route\nIn the Route Table VPN - Public Interface\nSelect Subnet Associations Select Edit Subnet Associations In the Edit Subnet Associations Interface Expand the Subnet ID column by dragging the pane to the right Select Subnet VPN Public Select Save Associations Complete and Recheck Routes "
},
{
	"uri": "http://localhost:1313/projects/1-project-001/_index.vi/",
	"title": "Giới thiệu",
	"tags": [],
	"description": "",
	"content": "Giới thiệu Amazon VPC Amazon Virtual Private Cloud (Amazon VPC) là “Đám mây Riêng tư Ảo” là một mạng ảo tùy chỉnh nằm bên trong AWS Cloud và tách biệt với toàn bộ thế giới bên ngoài. Khái niệm này tương tự như việc thiết kế và triển khai một mạng độc lập riêng biệt hoạt động trong một trung tâm dữ liệu on-premise, loại hình vẫn còn rất phổ biến hiện nay tại nhiều nơi trên thế giới.\nBên trong VPC tùy chỉnh đó, bạn có toàn quyền kiểm kiểm soát môi trường mạng ảo của mình, nghĩa là vừa có khả năng khởi tạo và chạy các tài nguyên AWS, vừa có thể lựa chọn phạm vi địa chỉ IP, tạo các mạng con và cấu hình các bảng định tuyến và cổng kết nối mạng. Bạn có thể sử dụng cả IPv4 và IPv6 để truy cập an toàn và dễ dàng vào tài nguyên và ứng dụng trong VPC.\nRegion là khái niệm mô tả nhiều cụm trung tâm dữ liệu cực lớn của AWS đặt tại một vùng lãnh thổ nhất định. Trong một region, ta có thể tạo ra nhiều VPC và mỗi VPC được phân biệt nhau bởi những dải không gian địa chỉ IP khác nhau. Ta chỉ định phạm vi địa chỉ IPv4 bằng cách lựa chọn một Classless Inter-Domain Routing (CIDR), chẳng hạn như 10.0.0.0/16. Phạm vi địa chỉ của Amazon VPC không thể thay đổi sau khi nó đã được tạo. Phạm vi địa chỉ Amazon VPC có thể lớn bằng /16 (tức 65536 địa chỉ khả dụng) hoặc nhỏ bằng /28 (tức 16 địa chỉ khả dụng) và chúng không được phép trùng với bất kỳ mạng nào khác mà chúng sẽ được kết nối tới.\nDịch vụ Amazon VPC được ra mắt sau dịch vụ Amazon EC2, vì vậy mà có thời điểm AWS cung cấp hai nền tảng mạng khác nhau đó là EC2-Classic và EC2-VPC. EC2-Classic là nền tảng mạng đầu tiên, trong đó tất cả Amazon EC2 được tạo ra đều nằm trong một mạng phẳng duy nhất, chia sẻ kết nối giữa các khách hàng của AWS. Cho tới tháng 12 năm 2013, AWS chỉ còn hỗ trợ EC2-VPC với VPC mặc định được tạo ra ở mỗi Region cùng một subnet mặc định với CIDR block có giá trị là 172.31.0.0/16.\nNội dung Subnets Route Table Internet Gateway NAT Gateway Bây giờ chúng ta sẽ cùng nhau đi qua các khái niệm cơ bản nhất của VPC nhé.\n"
},
{
	"uri": "http://localhost:1313/projects/",
	"title": "My Projects",
	"tags": [],
	"description": "",
	"content": "Wellcome to my projects Overviews In this lab, you will explore the fundamentals of Amazon VPC (Virtual Private Cloud) and AWS VPN (Virtual Private Network) Site-to-Site connections. Gain an understanding of essential concepts and features within Amazon VPC, and practice creating a basic VPC. Additionally, learn how to configure a Site-to-Site VPN to establish a connection between an on-premise environment and an AWS VPC environment.\nProjects Project 001 Project 002 Preparation Steps Creating an EC2 Server Configuration of Site-to-Site VPN Resource Cleanup "
},
{
	"uri": "http://localhost:1313/projects/1-project-001/",
	"title": "Project 001",
	"tags": [],
	"description": "",
	"content": "Introduction to Amazon VPC Amazon Virtual Private Cloud (Amazon VPC) is a Virtual Private Cloud—a customized virtual network hosted within the AWS Cloud and isolated from the external world. This concept resembles the design and implementation of a distinct standalone network environment in an on-premise data center, a practice still widely employed across many countries.\nContents Subnets Route Table Internet Gateway NAT Gateway In the following sections, we will delve into the fundamental concepts of VPC.\n"
},
{
	"uri": "http://localhost:1313/projects/2-project-002/2.1-securitygroup/",
	"title": "Security Group",
	"tags": [],
	"description": "",
	"content": "Security Group Basic Features of Security Group Allow Rules Only: Only Allow rules can be added; Deny rules cannot be added. Separate Rules for Traffic: Separate rules can be specified for outgoing and incoming traffic. Initial Inbound Rules: A newly created Security group starts with no Inbound rules. Initially, the instance won\u0026rsquo;t allow any traffic in, requiring the addition of an Inbound rule to enable access. Default Outbound Rule: By default, the Security group includes an Outbound rule that permits all traffic to leave the instance. This rule can be modified or replaced with specific Outbound rules to control outgoing traffic originating from the instance. If there\u0026rsquo;s no Outbound rule, no traffic is allowed to exit the instance. Stateful Service: Security groups are stateful services, meaning that if incoming traffic is allowed, outgoing traffic is automatically permitted, and vice versa, regardless of the Outbound rule. Instance Communication: Instances can communicate only if they are associated with a Security group that permits connections, or if a Security group associated with the instance contains a rule allowing traffic. The default Security group has default rules allowing all traffic. Association with Network Interfaces: Security groups are associated with network interfaces. After initialization, you can change the Security group assigned to an instance, which will also update the Security group for the corresponding primary network interface. Security Group Rule A Security group rule is created to grant access to traffic entering or leaving an instance. This access can apply to a specific CIDR or to a Security group in the same VPC, or even to a Security group in another VPC connected by peering.\nComponents of Security Group Rule Inbound Rules: These include the source of the traffic and the destination port or port range. The source can be another security group, an IPv4 or IPv6 CIDR range, or an IPv4/IPv6 address. Outbound Rules: These include the destination of the traffic and the destination port or port range. The destination can be another security group, an IPv4 or IPv6 CIDR range, an IPv4/IPv6 address, or a service identified by a prefix (e.g. igw_xxx) in the prefix ID list (where services are identified by the prefix ID - the name and ID of the available service in the region). Standard Protocols: Each protocol has a standard protocol number associated with it. For instance, SSH is associated with port number 22. "
},
{
	"uri": "http://localhost:1313/projects/2-project-002/2.1-securitygroup/_index.vi/",
	"title": "Security Group",
	"tags": [],
	"description": "",
	"content": "Security Group Một số đặc điểm cơ bản của Security group:\nChỉ có thể thêm vào các Allow rule, mà không thể bổ sung Deny rule. Có thể chỉ định các rule riêng biệt cho lưu lượng truy cập đi ra hoặc đi vào. Một Security group mới được tạo ra không có sẵn Inbound rules. Do đó, tại thời điểm ban đầu Instance sẽ không cho phép bất cứ lưu lượng truy cập nào được phép đi vào, đòi hỏi ta phải bổ sung Inbound rule để cấp phép truy cập. Mặc định, Security group có sẵn Outbound rule cho phép mọi lưu lượng được phép đi ra khỏi Instance. Rule này có thể được chỉnh sửa (xóa) và bổ sung các Outbound rule cụ thể, chỉ rõ lưu lượng nào xuất phát từ Instance được phép đi ra ngoài. Nếu SG không có Outbound rule thì không một lưu lượng nào được phép đi ra khỏi Instance. Security groups là một dịch vụ Stateful - nghĩa là nếu lưu lượng đi vào Instance đã được cấp phép thì lưu lượng cũng có thể đi ra ngoài Instance, và ngược lại, bất kể Outbound rule như thế nào. Các Instance chỉ có thể giao tiếp được với nhau khi và chỉ khi chúng được liên kết với Security group cho phép kết nối, hoặc Security group mà Instance có liên kết chứa Rule cho phép lưu lượng try cập (ngoại trừ Security group mặc định với có các rule mặc định cho phép toàn bộ lưu lượng được truy cập). Security group được liên kết với các network interface. Sau khi Instance đã được khởi tạo, ta vẫn có thể thay đổi Security group đã được gán với Instance, điều này cũng thay đổi security group đang được gán với primary network interface tương ứng. Security group Rule Rule được sinh ra để cấp quyền truy cập cho lưu lượng đi vào hoặc đi ra khỏi Instance. Quyền truy cập này có thể được áp dụng cho một CIDR cụ thể hoặc cho một Security group nằm trong cùng một VPC hoặc nằm trong một VPC khác nhưng có kết nối peering đã được khởi tạo.\nCác thành phần cơ bản của Security group rule:\n(Chỉ đối với Inbound rules) gồm điểm xuất phát (nguồn) của lưu lượng truy cập và port đích hoặc dải port. Nguồn có thể là một security group khác, là một dải IPv4 hoặc IPv6 CIDR hoặc đơn thuẩn là một địa chỉ IPv4 hoặc IPv6. (Chỉ đối với Outbound rules) gồm đích đến của lưu lượng và port đích hay dải port đích. Đích đến có thể là một security group khác, là một dải IPv4 hoặc IPv6 CIDR hoặc đơn thuẩn là một địa chỉ IPv4 hoặc IPv6 hoặc là một dịch vụ bắt đầu bằng một tiền tố (ví dụ: igw_xxx) nằm trong danh sách prefix ID(một dịch vụ được xác định bởi prefix ID - tên và ID của dịch vụ khả dụng trong region). Mọi giao thức đều có một số giao thức chuẩn. Ví dụ: SSH là 22,.. "
},
{
	"uri": "http://localhost:1313/projects/1-project-001/1.1-subnets/",
	"title": "Subnets",
	"tags": [],
	"description": "",
	"content": "Subnets A subnet is a segment of the IP address range that you use when provisioning your Amazon VPC. It directly provides the active network range to the AWS resources that may run within it, such as Amazon EC2 and Amazon RDS (Amazon Relational Database Service). Subnets are identified through CIDR blocks (e.g., 10.0.1.0/24 and 192.168.0.0/24), and the subnet\u0026rsquo;s CIDRs must be within the VPC\u0026rsquo;s CIDR. The smallest subnet that can be created is /28 (16 IP addresses). AWS reserves the first 4 IP addresses and the last 1 IP address of each subnet for intranet networking purposes. For example, a /28 subnet has 16 available IP addresses, but 5 reserved IPs are used for AWS, leaving 11 usable IP addresses for resources operating within this subnet.\nAn Availability Zone (AZ) is a single or multi-data center located within a Region and identified based on geographical location. Within an AZ, there can be one or more subnets. However, a subnet can only reside in a single AZ and cannot extend to other AZs.\nSubnets are categorized as:\nPublic subnet: This subnet has a route table (discussed later) that directs traffic within the subnet to the VPC\u0026rsquo;s Internet Gateway (IGW) (discussed later). Private subnet: The opposite of a Public subnet, it lacks a route table directing traffic to the VPC\u0026rsquo;s IGW. VPN-only subnet: This subnet has a route table that directs traffic to Amazon VPC\u0026rsquo;s Virtual Private Gateway (VPG) (discussed later). Regardless of the subnet type, the subnet\u0026rsquo;s internal IP address range is always private. This means that it is not possible to directly connect to addresses within this range from outside the Internet.\n"
},
{
	"uri": "http://localhost:1313/projects/1-project-001/1.1-subnets/_index.vi/",
	"title": "Subnets",
	"tags": [],
	"description": "",
	"content": "Subnets Subnet là một phân đoạn của dải địa chỉ IP mà bạn sử dụng khi khởi tạo Amazon VPC, cung cấp trực tiếp dải mạng hoạt động cho các tài nguyên AWS có thể chạy bên trong nó như Amazon EC2, Amazon RDS (CSDL Quan hệ Amazon),\u0026hellip; Các subnet cũng được xác định thông qua CIDR block (ví dụ: 10.0.1.0/24 và 192.168.0.0/24) và bắt buộc các CIDR của subnet phải nằm trong CIDR của VPC. Subnet nhỏ nhất có thể tạo được là /28 (16 địa chỉ IP). AWS lưu trữ 4 địa chỉ IP đầu tiên và 1 địa chỉ IP cuối cùng của mỗi subnet cho các mục đích kết nối mạng nội bộ. Ví dụ: subnet /28 có 16 địa chỉ IP khả dụng, nhưng loại bỏ 5 reserved IP cho AWS, như vậy còn lại 11 địa chỉ IP có thể sử dụng cho các tài nguyên hoạt động bên trong subnet này.\nAvailability Zone hay được viết tắt thành AZ là một trung tâm dữ liệu con, nằm bên trong Region và được xác định dựa treo vị trí địa lý. Bên trong AZ có thể có một hoặc nhiều subnet, nhưng một subnet chỉ có thể nằm trong duy nhất một AZ mà không thể mở rộng sang AZ khác.\nCác subnet được chia thành các loại như Public, Private, hoặc VPN-only.\nPublic subnet là subnet có route table (sẽ thảo luận sau) điều hướng lưu lượng truy cập bên trong subnet đi tới VPC IGW (cũng sẽ thảo luận sau) Private subnet thì ngược lại với Public subnet, nó không có route table điều hướng lưu lượng truy cập tới VPC IGW. VPN-only subnet là subnet mà có route table điều hướng lưu lượng truy cập tới VPG của Amazon VPC (sẽ thảo luận sau). Bất kể loại mạng con nào, dải địa chỉ IP nội bộ của subnet luôn là private (nghĩa là từ bên ngoài Internet không thể kết nối trực tiếp tới các địa chỉ thuộc dải này).\n"
},
{
	"uri": "http://localhost:1313/projects/4-createec2server/4.1-createec2/_index.vi/",
	"title": "Tạo máy chủ EC2",
	"tags": [],
	"description": "",
	"content": "Tạo EC2 nằm trong Public subnet Truy cập AWS Management Console\nTìm EC2 Chọn EC2 Trong giao diện EC2\nChọn Instances Chọn Launch instances Name and tags của instance, nhập EC2 Public Thực hiện chọn AMI\nChọn Quick Start Chọn Amazon Linux 2 Chọn AMI Thực hiện chọn Instance type và Chọn Create new key pair Trong giao diện Cretae key pair\nKey pair name, nhập aws-keypair (tên tùy chọn, bạn có thể đặt bất kỳ). Key pair type, chọn RSA Private key file format, chọn .pem Thực hiện cấu hình Network\nVPC, chọn ASG Subnet, chọn Public Subnet 1 Auto-assign public IP, chọn Enable Firewall (Security Group), chọn Select existing security group Chọn Public subnet -SG Chọn Launch instance Hoàn thành tạo instance Đợi khoảng 5 phút Status check sẽ chuyển sang 2/2 checks passed Tạo EC2 nằm trong Private subnet Trong giao diện EC2\nChọn Instances Chọn Launch instances Name and tags, nhập EC2 Private\nThực hiện chọn AMI\nChọn Quick Start Chọn Amazon Linux 2 Chọn AMI Thực hiện chọn instance type. Key pair name, chọn aws-keypair Thực hiện cấu hình Network\nVPC, chọn ASG vpc Subnet, chọn Private subnet 2 Auto-assign public IP, chọn Disable. Nếu không Disable, bạn cần kiểm tra lại phần cấu hình tự động cấp phát public IP cho subnet. Hoàn thành tạo instance - Chọn **View all instance**\rChọn EC2 Private\nChọn Details Lưu trữ Private IPv4 addresses "
},
{
	"uri": "http://localhost:1313/projects/5-vpnsitetosite/5.1-createvpnenv/_index.vi/",
	"title": "Tạo môi trường VPN",
	"tags": [],
	"description": "",
	"content": "Tạo môi trường VPN Trước khi khởi tạo và cấu hình kết nối VPN Site to Site, chúng ta cần tạo môi trường giả lập chi nhánh (ASG VPN) như kiến trúc bên dưới.\nNội dung Tạo ASG VPN VPC, 2 subnet, Internet Gateway Khởi tạo EC2 trên ASG VPN VPC "
},
{
	"uri": "http://localhost:1313/projects/5-vpnsitetosite/5.2-vpnsitetosite/5.2.1-createvpgw/_index.vi/",
	"title": "Tạo Virtual Private Gateway",
	"tags": [],
	"description": "",
	"content": "Tạo Virtual Private Gateway Truy cập vào VPC\nChọn Virtual Private Gateway Chọn Create Virtual Private Gateway Trong giao diện Create Virtual Private Gateway\nName tag, nhập VPN Gateway Chọn Amazon default ASN Chọn Create virtual private gateway Chúng ta cần thực hiện Attach to VPC\nChọn Actions Chọn Attach to VPC Trong giao diện Attach to VPC\nChọn VPC ASG. Chọn Attach to VPC Hoàn tất và xem State là Attached "
},
{
	"uri": "http://localhost:1313/projects/3-prerequiste/3.1-createvpc/_index.vi/",
	"title": "Tạo VPC",
	"tags": [],
	"description": "",
	"content": "Tạo VPC Truy cập giao diện AWS Management Console\nTìm VPC Chọn VPC Trong giao diện VPC\nChọn Yours VPC Chọn Create VPC Tiến hành các bước tạo VPC\nResource, chọn VPC only Name tag, nhập ASG IPv4 CIDR, nhập 10.10.0.0/16 Phần cấu hình Tennacy chúng ta sẽ để ở cơ chế mặc định. Nếu chúng ta chuyển sang Dedicated sẽ có một số EC2 Instance type không phù hợp và sẽ không tạo được trong VPC với tennacy mode là Dedicate\nChọn Create VPC Hoàn thành tạo VPC Xem chi tiết VPC vừa tạo. Kiểm nếu chưa Enable DNS resolution and DNS Hostname\nVào Edit VPC setting Chọn DNS setting Chọn và Save. "
},
{
	"uri": "http://localhost:1313/projects/5-vpnsitetosite/5.1-createvpnenv/5.1.1-createvpnvpc/_index.vi/",
	"title": "Tạo VPC cho VPN",
	"tags": [],
	"description": "",
	"content": "Tạo môi trường VPN Truy cập giao diện VPC\nChọn Yours VPC Chọn Create VPC Trong giao diện Cretae VPC\nResource, chọn VPC only Name, nhập ASG VPN IPv4 CIDR block, nhập 10.11.0.0/16 Chọn Create VPC Tạo VPC thành công Truy cập giao diện VPC\nChọn Subnets Chọn Create subnet Trong giao diện Create subnet\nChọn ASG VPN vpc Trong giao diện Subnet settings\nSubnet name, nhập VPN Public Lựa chọn Availability Zone: ap-southeast-1a Chọn IPv4 CIDR block là 10.11.1.0/24 theo kiến trúc mô tả Tạo thành công VPN Public Trong giao diện VPC\nChọn Subnets Chọn VPN Public Chọn Actions Chọn Edit subnet settings Thực hiện Auto-assign IP settings\nChọn Enable auot-assign public IPv4 address Chọn Save Cấp phát IP thành công Trong giao diện VPC\nChọn Internet Gateway Chọn Create internet gateway Trong giao diện Create internet gateway\nName tag, nhập Internet Gateway VPN Chọn Create internet gateway Sau khi tạo Internet Gateway VPN thành công và State là Detached. Tiếp theo chúng ta cần Attach Internet Gateway vào VPC ASG VPN.\nChọn Actions Chọn Attach to VPC Chọn VPC ASG VPN, VPC ID sẽ được tự động điền.\nChọn Attach Internet Gateway Attach thành công khi State là Attached Tiếp theo chúng ta cần tạo Route Table định tuyến đi ra ngoài internet thông qua Internet Gateway. Trong giao diện VPC\nChọn Route Tables Chọn Create route table Trong giao diện Cretae route table\nName, nhập Route table VPN - Public Chọn VPC có tên ASG VPN , VPC id sẽ được tự động điền vào. Chọn Create route table Tạo route table thành công. Trong giao diện Route table VPN - Public\nChọn Route Chọn Edit route Trong giao diện Edit routes\nChọn Add route Điền phần Destination CIDR : 0.0.0.0/0 đại diện cho Internet. Trong phần Target chọn Internet Gateway, sau đó chọn Internet Gateway VPN chúng ta đã tạo. Internet Gateway ID sẽ được tự động điền. Chọn Save changes Hoàn thành và kiểm tra route\nTrong giao diện Route table VPN - Public\nChọn Subnet associations Chọn Edit subnet associations Trong giao diện Edit subnet associations\nMở rộng cột Subnet ID bằng cách kéo thanh ngăn sang phải. Chọn subnet VPN Public. Chọn Save associations Hoàn thành và kiểm tra lại Routes "
},
{
	"uri": "http://localhost:1313/projects/5-vpnsitetosite/5.2-vpnsitetosite/_index.vi/",
	"title": "Cấu hình kết nối VPN",
	"tags": [],
	"description": "",
	"content": "Cấu hình kết nối VPN Ở bước này chúng ta sẽ tiến hành tạo Virtual Private Gateway , Customer Gateway và kết nối VPN Site to Site.\nNội dung: Tạo Virtual Private Gateway Tạo Customer Gateway Tạo VPN Connection Cấu hình Customer GW Cấu hình VPN tunnel "
},
{
	"uri": "http://localhost:1313/projects/5-vpnsitetosite/5.2-vpnsitetosite/",
	"title": "Configure VPN Connection",
	"tags": [],
	"description": "",
	"content": "Configure VPN Connection In this step, we will proceed to set up a Virtual Private Gateway, Customer Gateway, and VPN Site-to-Site connection.\nContent: Create Virtual Private Gateway Create Customer Gateway Create VPN Connection Customer Gateway Configuration Configure VPN Tunnel "
},
{
	"uri": "http://localhost:1313/projects/5-vpnsitetosite/5.2-vpnsitetosite/5.2.2-createcustomergw/",
	"title": "Create Customer Gateway",
	"tags": [],
	"description": "",
	"content": "Create Customer Gateway Access the VPC:\nNavigate to Customer Gateways Click on Create Customer Gateway In the Create Customer Gateway interface:\nSet the Name tag to Customer Gateway Enter the IP address as the public IP address of the EC2 Customer Gateway server Click on Create Customer Gateway Wait for approximately 5 minutes for the Customer Gateway creation to complete:\n::: tip Note According to the architectural model, the Customer Gateway will reside in the VPC in the on-premise environment. The current action declares to AWS the intent to create a Customer Gateway with a public IP address, which corresponds to the public address of the EC2 instance. This Customer Gateway is located in the ASG VPN VPC. :::\n"
},
{
	"uri": "http://localhost:1313/projects/5-vpnsitetosite/5.1-createvpnenv/5.1.2-createec2vpn/",
	"title": "Create EC2 as a Customer Gateway",
	"tags": [],
	"description": "",
	"content": "Create EC2 as a Customer Gateway Access to VPC\nSelect Security Group Select Create security group In the Create security group interface\nSecurity group name: Enter VPN Public -SG Description: Allow IPSec, SSH, and Ping for servers in the public subnet. VPC: Select ASG VPN VPC Configure Inbound rules\nSelect Add rule Type: SSH, Source: My IP (Your public IPv4 address). Click Add rule to add a new rule. Type: All ICMP IPv4, Source: Anywhere (Allow ping from any IP address). Click Add rule to add a new rule. Type: Custom UDP, Port: 400, Source: Anywhere. Click Add rule to add a new rule. Type: Custom TCP, Port: 500, Source: Anywhere. Check Outbound rules and select Create security group\nComplete the creation of VPN Public - SG. A Security Group has been created. Next, we will proceed to create an EC2 server that plays the Customer Gateway role.\nAccess to EC2\nSelect Instances Select Launch instances In the Launch instances interface\nName: Enter Customer Gateway instance Executing AMI Selection\nSelect Quick Start Select Amazon Linux Select AMI Select Instance type and select Key pair: aws-keypair (keypair created with instances)\nConfigure Network\nVPC: Select ASG VPN VPC Subnet: Select VPN Public Auto-assign public IP: Select Enable Firewall: Select Select existing security group Select VPN Public - SG Check again and select Launch instance Finish creating the EC2 instance\nSelect View all instances View details of the Customer Gateway instance\n"
},
{
	"uri": "http://localhost:1313/projects/3-prerequiste/3.2-createsubnet/",
	"title": "Create Subnet",
	"tags": [],
	"description": "",
	"content": "Create Subnet In the VPC Interface:\nSelect Subnets Select Create subnet In the Create subnet Interface:\nSelect ASG VPC Implement Subnet Settings:\nSubnet name: Enter Public Subnet 1 Select AZ ap-southeast-1a IPv4 CIDR block: Import 10.10.1.0/24 according to the architecture description Select Create subnet Finish Creating Subnet\nFollow the same steps to create more subnets:\nPublic subnet 2 with CIDR of 10.10.2.0/24 located in Availability Zone ap-southeast-1b Private subnet 1 with CIDR of 10.10.3.0/24 located in Availability Zone ap-southeast-1a Private subnet 2 with CIDR of 10.10.4.0/24 located in Availability Zone ap-southeast-1b Note: You can see there are 2 columns: Availability Zone and Availability Zone ID. To avoid uneven usage of EC2 resources (for example, using AZ a for primary and AZ b for standby), AWS randomly assigns Availability Zone into Availability Zone ID. Availability Zone is an alias, and Availability Zone ID is the identifier. For instance, in the image above, Availability Zone ap-southeast-1a is assigned the Availability Zone ID apse1-az2. In another AWS account, Availability Zone ap-southeast-1a may have an Availability Zone ID of apse1-az1.\nAllow Automatic Allocation of Public IP Addresses for 2 Public Subnets Tip: Another important point to note is that even though the subnets are the same, configuring the routing table and allocating a public IP address allows us to distinguish between Public and Private Subnets.\nIn the VPC Interface:\nSelect Subnets Select Public Subnet 1 Select Actions Select Edit subnet settings Under Auto-assign IP settings:\nSelect Enable auto-assign public IPv4 address Select Save Repeat the same process for Public subnet 2.\n"
},
{
	"uri": "http://localhost:1313/projects/4-createec2server/4.2-connectec2/_index.vi/",
	"title": "Kiểm tra kết nối",
	"tags": [],
	"description": "",
	"content": "Kiểm tra kết nối Có nhiều cách kết nối EC2, các bạn có thể tham khảo kết nối EC2 bằng PuTTY. Trong bài lab, chúng ta sử dụng MobaXterm để kết nối EC2\nThực hiện tải MobaXterm Truy cập vào trang EC2\nChọn Instances Chọn EC2 Public Chọn Details Xem Public IPv4 address Sau khi tải MobaXterm, tiến hành giải nén và mở\nChọn Session Trong giao diện Session settings\nChọn SSH Trong giao diện Session settings\nRemote host, nhập Public IPv4 address Specify username, nhập ec2-user Use private key, chọn đường dẫn của aws-keypair.pem đã tạo và tải về máy lúc tạo EC2. Kết nối thành công. Kiểm tra kết nối tới internet của EC2 Public, ta thực hiện lệnh: ping amazon.com -c5 Thực hiện ping đến EC2 private ping \u0026lt;IP Private EC2 Private\u0026gt; Kết nối vào máy chủ EC2 Private và kiểm tra kết nối internet. Truy cập vào EC2\nChọn Instances Chọn EC2 Private Chọn Details Chọn Private IPv4 addresses Sau đó kết nối SSH vào EC2 Public Thực hiện lệnh ping \u0026lt;địa chỉ IP private của EC2 Private\u0026gt; để kiểm tra kết nối từ máy chủ EC2 Public sang máy chủ EC2 Private. Chúng ta kiểm tra kết nối giữa 2 EC2 instance bằng câu lệnh: ping 10.10.4.105 -c5 EC2 Private sẽ không có public IP address vì chúng ta không gán cho máy chủ này public IP. Để có thể ssh vào EC2 Private, chúng ta sẽ thực hiện kết nối ssh từ EC2 Public thông qua địa chỉ private IP address của EC2 Private\nDownload công cụ pscp vào cùng thư mục chứa file aws-keypair.ppk để thực hiện copy file aws-keypair.pem từ máy của chúng ta vào EC2 Public. Bạn tải a RSA and DSA key generation utility là dạng puttygen.exe\nBạn tải an SCP client, i.e. command-line secure file copy là dạng pscp.exe\nChúng ta sử dụng puttygen.exe để generation key\nChọn Load Chọn aws-keypair.pem\nChọn OK Chọn Save private key với tên aws-keypair.ppk Hoàn thành generation key Khởi chạy Command Prompt. Chuyển đường dẫn tới thư mục bạn vừa download pscp. Chạy lệnh dưới đây để upload file aws-keypair.pem lên thư mục /home/ec2-user/ của máy chủ EC2 Public.\nBạn sẽ cần thay thế thông số public IP address của EC2 Public trước khi chạy câu lệnh. pscp -i aws-keypair.ppk aws-keypair.pem ec2-user@\u0026lt;EC2 PUBLIC public IP address\u0026gt;:/home/ec2-user/ Truy cập vào EC2\nChọn Instances Chọn EC2 Public Chọn Details Xem Public IPv4 address Quay trở lại giao diện kết nối EC2. Để đảm bảo bạn copy file aws-keypair.pem lên máy chủ EC2 Public ta thực hiện lệnh ls Cập nhật quyền cho file aws-keypair.pem bằng cách chạy lệnh chmod 400 aws-keypair.pem. AWS yêu cầu file key pair cần được hạn chế quyền truy cập trước khi được sử dụng để kết nối tới máy chủ EC2. chmod 400 aws-keypair.pem SSH tới máy chủ EC2 Private ssh -i aws-keypair.pem ec2-user@\u0026lt;EC2 Private server\u0026#39;s private IP address\u0026gt; Thực hiện ping test tới amazon.com. Bạn có thể thấy, chúng ta không thể kết nối internet từ EC2 Private. Trong bước tiếp theo chúng ta sẽ tạo NAT Gateway để cho phép máy chủ EC2 Private kết nối internet theo chiều từ nội bộ đi ra. Giữ nguyên kết nối tới EC2 Private để chúng ta có thể kiểm tra kết nối tới internet sau khi hoàn tất tạo và cấu hình NAT Gateway nhé. ping amazon.com "
},
{
	"uri": "http://localhost:1313/projects/2-project-002/2.2-networkacls/",
	"title": "Network ACLs",
	"tags": [],
	"description": "",
	"content": "Network ACLs Default Network ACL: After VPC initialization, a default network ACL is available and can be modified. By default, it grants access to all IPv4 or IPv6 traffic entering or leaving the VPC. Custom Network ACL: You can create a custom network ACL and associate it with a subnet. By default, custom network ACLs deny all incoming and outgoing traffic until access permission rules are added. Subnet Association: Each subnet in the VPC must be associated with a network ACL. If not associated with a specific network ACL, the subnet automatically uses the default network ACL. Multiple Subnets: A network ACL can be associated with multiple subnets, but a subnet can only be linked to one network ACL at a time. Associating a new network ACL with a subnet removes the previous association. Rule Sequencing: Network ACLs have rules with sequence numbers. Rules are evaluated based on their sequence number, from lowest to highest, to determine traffic access for associated subnets. The maximum sequence number is 32766. Allow/Deny Traffic: Network ACLs contain both inbound and outbound rules for allowing or denying traffic. Stateless Service: Network ACLs are stateless; responses to allowed inbound traffic must adhere to outbound traffic rules, and vice versa. Network ACL Rules You can manage rules for the default network ACL or create a new one for the VPC. Changes to the network ACL\u0026rsquo;s rules automatically apply to its associated subnets.\nComponents of a network ACL rule:\nRule Number: Rules are evaluated in sequence order, starting with the lowest number. Once a rule matches traffic, it\u0026rsquo;s immediately applied even if it conflicts with higher-numbered rules. Type: Defines the traffic type (e.g., SSH). Specify traffic types or custom ranges. Protocol: Specify the protocol using standard protocol numbers. Port Range: Define the port or port range for traffic (e.g., HTTP is 80). Source: [Inbound Rule] Defines the traffic origin (CIDR range). Destination: [Outbound Rule] Specifies the traffic destination (CIDR range). Allow/Deny: Choose to Allow or Deny the specified traffic. "
},
{
	"uri": "http://localhost:1313/projects/2-project-002/2.2-networkacls/_index.vi/",
	"title": "Network ACLs",
	"tags": [],
	"description": "",
	"content": "Network ACLs VPC sau khi khởi tạo sẽ có sẵn một network ACL mặc định và có thể được sửa đổi. Mặc định, nó cấp phép truy cập cho tất cả lưu lượng truy cập IPv4 hoặc IPv6 có thể đi ra hoặc đi vào VPC. Có thể tạo một network ACL tùy chỉnh và liên kết nó với một subnet. Mặc định các network ACL tùy chỉnh từ chối tất cả lưu lượng truy cập đi vào và đi ra, cho đến khi ta bổ sung rule cấp phép truy cập. Từng subnet trong VPC phải được liên kết với một network ACL. Nếu subnet không được liên kết với một network ACL cụ thể thì subnet sẽ được tự động liên kết với network ACL mặc định. Một network ACL có thể liên kết với nhiều subnet. Tuy nhiên, một subnet chỉ có thể liên kết với một network ACL tại một thời điểm. Khi liên kết network ACL mới với subnet,thì liên kết trước đó sẽ bị xóa. Một network ACL chứa một danh sách các rule được đánh số khác nhau. AWS đánh giá các rule dựa trên số thứ tự được gán, bắt đầu với rule được đánh số thấp nhất, để xác định xem lưu lượng có được phép đi vào hay đi ra khỏi bất kỳ subnet nào được liên kết với network ACL hay không. Số thứ tự lớn nhất có thể được gán cho rule là 32766 (tương đương số lượng rule lớn nhất của một network ACL là 32766). Network ACL có các rule cấp phép đi vào hoặc đi ra tách biệt và rule có thể là cho phép hoặc từ chối lưu lượng. Network ACL là dịch vụ Stateless, nghĩa là phản hồi đối với lưu lượng truy cập được phép đi vào, phải tuân theo rule đối với lưu lượng truy cập đi ra (và ngược lại). Network ACL rules Có thể thêm hoặc xóa một rule khỏi network ACL mặc định hoặc tạo network ACL mới cho VPC. Khi thêm hoặc xóa một rule khỏi network ACL, các thay đổi sẽ tự động được áp dụng cho các subnet được liên kết với nó.\nCác thành phần của một network ACL rule:\nRule number. Rule bắt đầu được đánh giá bắt đầu với rule có số thứ tự thấp nhất. Ngay khi rule đó match với lưu lượng truy cập, nó sẽ ngay lập tức được áp dụng cho dù nó mâu thuẫn với một rule nào đó được đánh số lớn hơn trong danh sách. Type.loại lưu lượng, ví dụ SSH. Có thể chỉ định tất cả các loại lưu lượng truy cập hoặc phạm vi tùy chỉnh. Protocol. chỉ định giao thức cùng số giao thức chuẩn. Port range. port hoặc dải port lắng nghe của lưu lượng truy cập. Ví dụ: HTTP là 80. Source. [chỉ đối với Inbound rule] Xuất phát của lưu lượng truy cập (giá trị là dải CIDR). Destination. [chỉ đối với Outbound rule] Điểm đến của lưu lượng truy cập (giá trị là dải CIDR). Allow/Deny. chỉ rõ là Cho phép hoặc Từ chối lưu lượng truy cập. "
},
{
	"uri": "http://localhost:1313/projects/2-project-002/",
	"title": "Project 002",
	"tags": [],
	"description": "",
	"content": "Security Groups A Security Group acts as a virtual firewall for an EC2 Instance, allowing control over network traffic. In a VPC, an Instance can be assigned up to 5 Security Groups. It\u0026rsquo;s important to note that Security Groups operate at the Instance layer and not at the Subnet layer.\nNote: Security Groups function at the virtual machine level, rather than the subnet level. However, each virtual machine within a subnet can be assigned to different security groups.\nContents Security Groups Network ACLs "
},
{
	"uri": "http://localhost:1313/projects/1-project-001/1.2-routetable/",
	"title": "Route Table",
	"tags": [],
	"description": "",
	"content": "Route Table The Route Table, also referred to as the routing table, is responsible for providing routing instructions within a network and is associated with specific subnets.\nFor instance, in the scenario where a Virtual Private Cloud (VPC) is established with the network layer 10.10.0.0/16, along with two subnets, 10.10.1.0/24 and 10.10.2.0/24, each default subnet will be allocated a default route table.\nInside the route table, there will exist a route entry with the following details:\nDestination: 10.10.0.0/16 Target: local This particular route entry signifies that resources created within the same VPC can communicate with each other.\n"
},
{
	"uri": "http://localhost:1313/projects/1-project-001/1.2-routetable/_index.vi/",
	"title": "Route Table",
	"tags": [],
	"description": "",
	"content": "Route Table Route Table hay còn gọi là bảng định tuyến, cung cấp hướng dẫn định tuyến và được gán vào các Subnets. Ví dụ khi bạn tạo VPC với lớp mạng 10.10.0.0/16, cùng 2 subnet 10.10.1.0/24,10.10.2.0/24 thì mỗi subnets mặc định sẽ được gán 1 default route table.\nBên trong route table sẽ có route entry destination:10.10.0.0/16 target:local. Route entry này thể hiện các tài nguyên tạo ra trong cùng 1 VPC có thể kết nối với nhau.\n"
},
{
	"uri": "http://localhost:1313/projects/5-vpnsitetosite/5.2-vpnsitetosite/5.2.2-createcustomergw/_index.vi/",
	"title": "Tạo Customer Gateway",
	"tags": [],
	"description": "",
	"content": "Tạo Customer Gateway Truy cập vào VPC\nChọn Customer Gateways Chọn Create Customer Gateway Trong giao diện Create Customer Gateway\nName tag, nhập Customer Gateway IP address, nhập public IP address của máy chủ EC2 Customer Gateway. Chọn Create Customer Gateway Đợi khoảng 5 phút sau, hoàn tất tạo Customer Gateway Lưu ý: theo như mô hình kiến trúc, Customer Gateway sẽ nằm ở VPC trên môi trường onpremise. Hiện tại chúng ta đang làm là khai báo với AWS rằng chúng ta sẽ có 1 Customer Gateway với địa chỉ IP public là địa chỉ public của EC2 instance : Customer Gateway nằm trong ASG VPN VPC\n"
},
{
	"uri": "http://localhost:1313/projects/5-vpnsitetosite/5.1-createvpnenv/5.1.2-createec2vpn/_index.vi/",
	"title": "Tạo EC2 Instance",
	"tags": [],
	"description": "",
	"content": "Tạo EC2 để làm Customer Gateway Truy cập vào VPC\nChọn Security Group Chọn Create security group Trong giao diện Create security group\nSecurity group name, nhập VPN Public -SG Trong phần Description điền Allow IPSec, SSH and Ping for servers in public subnet. VPC, chọn ASG VPN vpc Tiến hành cấu hình Inbound rules\nChọn Add rule Chọn Type: SSH và Source: My IP. My IP đại diện cho 1 địa chỉ public IPv4 bạn đang sử dụng. Click Add rule để thêm 1 rule mới. Chọn Type: All ICMP IPv4 và Source: Anywhere. Cho phép ping từ bất kì địa chỉ IP nào. Click Add rule để thêm 1 rule mới. Chọn Type: Custom UDP , Port:400 và Source : Anywhere. Click Add rule để thêm 1 rule mới. Chọn Type: Custom TCP , Port:500 và Source : Anywhere Kiểm tra Outbound rules và chọn Create security group Hoàn thành tạo VPN Public - SG. Như vậy chúng ta đã tạo được Security Group. Tiếp theo chúng ta sẽ tiến hành tạo máy chủ EC2 đóng vai trò Customer Gateway. Truy cập vào EC2\nChọn Instances Chọn Launch instances Trong giao diện Launch instances\nName, nhập Customer Gateway instance Thực hiện chọn AMI\nChọn Quick Start Chọn Amazon Linux Chọn AMI Phần chọn Instance type và chọn Key pair: aws-keypair(keypair đã tạo chung với các instance) Thực hiện cấu hình Network\nVPC, chọn ASG VPN vpc Subnet, chọn VPN Public Auto-assign public IP, chọn Enable Firewall, chọn Select existing security group Chọn VPN Public - SG Kiểm tra lại và chọn Launch instance Hoàn tất tạo EC2 instance\nChọn View all instances Xem chi tiết Customer Gateway instance "
},
{
	"uri": "http://localhost:1313/projects/3-prerequiste/3.2-createsubnet/_index.vi/",
	"title": "Tạo Subnet",
	"tags": [],
	"description": "",
	"content": "Tạo subnet Trong giao diện VPC\nChọn Subnets Chọn Create subnet Trong giao diện Create subnet\nChọn ASG VPC Thực hiện subnet settings\nSubnet name, nhập Public Subnet 1 Chọn AZ ap-southeast-1a IPv4 CIDR block, nhập 10.10.1.0/24 theo kiến trúc mô tả Chọn Create subnet Hoàn thành tạo subnet Thực hiện các bước tương tự tạo thêm các subnet\nPublic subnet 2 với CIDR là 10.10.2.0/24 nằm trong Availability Zone ap-southeast-1b. Private subnet 1 với CIDR là 10.10.3.0/24 nằm trong Availability Zone ap-southeast-1a. Private subnet 2 với CIDR là 10.10.4.0/24 nằm trong Availability Zone ap-southeast-1b Bạn có thể thấy có 2 cột là Availability Zone và Availability Zone ID. Để tránh việc tài nguyên EC2 được sử dụng không đồng đều, (chúng ta thường có xu hướng dùng AZ a để chạy primary và AZ b để stand by chẳng hạn) nên AWS sẽ gán ngẫu nhiên Availability Zone vào Availability Zone ID. Chúng ta có thể hiểu rằng Availability Zone là 1 dạng alias , còn Availability Zone ID mới chính là yếu tố định danh. Ví dụ ở hình trên Availability Zone ap-southeast-1a được gán Availability Zone ID là apse1-az2. Ở một AWS account khác , Availability Zone ap-southeast-1a có thể có Availability Zone ID là apse1-az1.\nCho phép tự động cấp phát public ip address cho 2 public subnet. Một điểm đáng chú ý nữa là các subnet về cơ bản đều giống nhau, thông qua cấu hình route table và cấp phát public IP address mà chúng ta mới phân chia ra Public và Private Subnet.\nTrong giao diện VPC\nChọn Subnets Chọn Public Subnet 1 Chọn Actions Chọn Edit subnet settings Trong mục Auto-assign IP settings\nChọn Enable auto-assign publi IPv4 address Chọn Save Sau đó thực hiện tương tự với Public subnet 2. "
},
{
	"uri": "http://localhost:1313/projects/4-createec2server/4.2-connectec2/",
	"title": "Test Connection",
	"tags": [],
	"description": "",
	"content": "Checking Connection ℹ️ Note: There are several ways to connect to EC2 instances. You can follow the instructions to connect to EC2 using PuTTY. In this lab, we will use MobaXterm to establish the connection.\nDownload MobaXterm\nAccess the EC2 Page\nGo to the EC2 page. Select Instances. Choose the EC2 Public instance. Select Details. Locate the Public IPv4 address. Using MobaXterm\nAfter downloading MobaXterm, extract and open it. Select Session. Configuring Session Settings\nIn the Session settings interface, choose SSH. Session Settings Continued\nIn the Session settings interface: Enter the Remote host (Public IPv4 address). Specify the username as ec2-user. Choose the Use private key option and provide the path to the aws-keypair.pem file created and downloaded during EC2 instance creation. Successful Connection\nTesting Internet Connection of EC2 Public\nExecute the following command to test the internet connection of the EC2 Public instance\nping amazon.com -c5 Make a ping to EC2 private ping \u0026lt;IP Private EC2 Private\u0026gt; Connect to the EC2 Private Server and Check Internet Connection Access to EC2\nSelect Instances Select EC2 Private Select Details Select Private IPv4 addresses Then connect SSH to EC2 Public Perform a ping test to the EC2 Private\u0026rsquo;s private IP address to test the connection from the EC2 Public server to the EC2 Private server. Use the following command: ping 10.10.4.105 -c5 EC2 Private will not have a public IP address because we are not assigning this server a public IP. To be able to ssh into EC2 Private, we will make an ssh connection from EC2 Public through EC2 Private private IP address\nDownload the pscp tool to the same folder containing the aws-keypair.ppk file to copy the aws-keypair.pem file from our computer to EC2 Public . You download an RSA and DSA key generation utility as puttygen.exe\nYou download an SCP client, i.e. command-line secure file copy is pscp.exe\nWe use puttygen.exe to generate key\nSelect Load Select aws-keypair.pem\nSelect OK Select Save private key with the name aws-keypair.ppk Complete the generation key Launch Command Prompt. Change the path to the folder you just downloaded pscp. Run the command below to upload the aws-keypair.pem file to the /home/ec2-user/ directory of the EC2 Public server.\nYou will need to replace the public IP address of EC2 Public parameter before running the command. pscp -i aws-keypair.ppk aws-keypair.pem ec2-user@\u0026lt;EC2 PUBLIC public IP address\u0026gt;:/home/ec2-user/ Access to EC2\nSelect Instances Select EC2 Public Select Details View Public IPv4 address Return to the EC2 connection interface. Make sure you copy the aws-keypair.pem file to the EC2 Public server, we execute the command ls Update the permissions for the aws-keypair.pem file by running the chmod 400 aws-keypair.pem command. AWS requires the key pair file to be restricted before it can be used to connect to the EC2 server. chmod 400 aws-keypair.pem SSH to EC2 Private server ssh -i aws-keypair.pem ec2-user@\u0026lt;EC2 Private server\u0026#39;s private IP address\u0026gt; Perform ping test to amazon.com. As you can see, we cannot connect internet from EC2 Private. In the next step, we will create NAT Gateway to allow the EC2 Private server to connect to the internet in the outbound direction. Keep the connection to EC2 Private so that we can check the connection to internet after finishing creating and configuring NAT Gateway. ping amazon.com "
},
{
	"uri": "http://localhost:1313/projects/2-project-002/_index.vi/",
	"title": "Tường lửa trong VPC",
	"tags": [],
	"description": "",
	"content": "Tường lửa trong VPC Trong phần này, chúng ta sẽ cùng tìm hiểu các tính năng bảo mật cơ bản trong Amazon VPC như tính năng tường lửa Security Group và Network Access Control Lists.\nMột security group hoạt động như một tường lửa ảo cho EC2 Instance, giúp kiểm soát lưu lượng truy cập. Một Instance trong VPC có thể được gán tối đa 5 Security group do SG chỉ hoạt động ở tầng Instance mà không họat động ở tầng Subnet.\nSecurity groups hoạt động ở mức máy ảo, không phải ở mức subnet. Tuy nhiên, mỗi máy ảo trong một subnet có thể được gán với nhiều bộ Security group khác nhau.\nDanh sách kiểm soát truy cập mạng (ACL) là lớp bảo mật tùy chọn cho VPC, nó hoạt động như một tường lửa để kiểm soát lưu lượng ra và vào cho một hoặc nhiều subnet. Ta có thể thiết lập network ACL với các rule tương tự như security groups, nhằm bổ sung thêm một lớp bảo mật nữa cho VPC.\nNội dung Security groups Network ACLs "
},
{
	"uri": "http://localhost:1313/projects/3-prerequiste/_index.vi/",
	"title": "Các bước chuẩn bị",
	"tags": [],
	"description": "",
	"content": "Các bước chuẩn bị Trong bài thực hành này, chúng ta sẽ xây dựng một mô hình theo sơ đồ bên dưới:\nNội dung Tạo VPC Tạo Subnet Tạo Internet Gateway Tạo Route Table Tạo Security Group "
},
{
	"uri": "http://localhost:1313/projects/3-prerequiste/3.3-createigw/",
	"title": "Create Internet Gateway",
	"tags": [],
	"description": "",
	"content": "Create an Internet Gateway In the VPC interface:\nSelect Internet Gateways Click on Create internet gateway\nConfigure the internet gateway:\nEnter Internet Gateway for the Name tag Click on Create internet gateway\nComplete the creation of the Internet Gateway\nImplement Attach VPC:\nClick on Actions Click on Attach to VPC Select ASG; the VPC ID will be automatically populated Click on Attach internet gateway\nOnce attached successfully, the State of the internet gateway will change to Attached\n"
},
{
	"uri": "http://localhost:1313/projects/4-createec2server/4.3-natgateway/",
	"title": "Create NAT Gateway",
	"tags": [],
	"description": "",
	"content": "Create NAT Gateway Access EC2: Select Elastic IPs Select Allocate Elastic IP address In the Allocate Elastic IP address interface: Public IPv4 address pool: Select Amazon\u0026rsquo;s pool of IPv4 addresses Select Allocate Successfully created a Public IP Address Access VPC: Select NAT Gateways Create NAT gateway In NAT gateway interface: Name: Enter NAT gateway Subnet: Select Public subnet 2 Connectivity type: Select Public Elastic IP allocation ID: Select recently created Elastic IP Select Create NAT gateway Successfully created NAT gateway Create Route table - Private and assign to private subnets In the VPC interface: Select Route Tables Select Create route table In the Route table interface: Name: Enter Route table - Private VPC: Select ASG VPC Select Create route table Finish creating Route table - Private In the Route table - Private interface: Select Subnet Associations Select Edit subnet associations In the Edit subnet associations interface: Choose 2 private subnets Select Save associations In the Route table - Private interface: Select Routes Select Edit routes In the Edit routes interface: Select Add route Destination: 0.0.0.0/0 Target: NAT Gateway Select Save changes Double check Routes Test ping amazon.com successfully from EC2 Private: ping amazon.com -c5 "
},
{
	"uri": "http://localhost:1313/projects/5-vpnsitetosite/5.2-vpnsitetosite/5.2.3-createvpnconnection/",
	"title": "Create VPN Connection",
	"tags": [],
	"description": "",
	"content": "Create a VPN Connection Access VPC:\nSelect Site-to-Site VPN Connections Select Create VPN Connection In the Create VPN Connection Interface:\nName Tag: Enter VPN Connection Target Gateway Type: Select Virtual Private Gateway Virtual Private Gateway: Select VPN Gateway Customer Gateway: Existing Customer Gateway ID: Select Customer Gateway Continue to Perform Configuration:\nRouting Options: Static Static IP Prefixes: 10.11.0.0/16. This is the IP address resolution in a simulated On-premise environment. Other configurations keep the default. Select Create VPN Connection\nWait for about 5 minutes to finish creating the VPN Connection\nConfigure Propagation for Route Tables:\nIn the VPC interface, select Route Tables Select Route table - Public Select Route Propagation Select Edit Route Propagation In the Edit Route Propagation Interface:\nSelect Enable Select Save Complete and Recheck: Route Propagation should have changed to Yes\nSimilar Route Propagation for Private Subnet:\n"
},
{
	"uri": "http://localhost:1313/projects/1-project-001/1.3-internetgateway/",
	"title": "Internet Gateway",
	"tags": [],
	"description": "",
	"content": "Internet Gateway The Internet Gateway (IGW) is a crucial component of Amazon VPC that facilitates communication between resources within the VPC, specifically EC2 instances, and the Internet. The IGW exhibits robust horizontal scalability, along with high levels of redundancy and availability. It operates as a designated target within the Amazon VPC\u0026rsquo;s routing table, playing a vital role in directing traffic from EC2 instances to the external Internet. This process involves translating the network address of the EC2 instance into its corresponding Public IP address.\nMore precisely, the EC2 instances located within the VPC are only aware of their assigned Private IP addresses. However, when there is a need to transmit traffic from these EC2 instances to the Internet, the IGW intervenes by translating the originating Private IP address into the Public IP address (or Elastic IP addresses, as discussed later) assigned to the respective EC2 instance. This translation is upheld through a one-to-one mapping, which persists until the Public IP address is released.\nConversely, when the EC2 instances receive incoming traffic from the Internet, the IGW undertakes the task of translating the target address (Public IP address) into the corresponding Private IP address of the EC2 instance. Subsequently, the IGW forwards this traffic into the Amazon VPC.\n"
},
{
	"uri": "http://localhost:1313/projects/1-project-001/1.3-internetgateway/_index.vi/",
	"title": "Internet Gateway",
	"tags": [],
	"description": "",
	"content": "Internet Gateway Internet Gateway (IGW) là một thành phần Amazon VPC giúp các tài nguyên bên trong VPC, cụ thể là EC2, có khả năng giao tiếp với Internet. IGW có khả năng co giãn mạnh theo chiều ngang, đồng thời tính dự phòng và sẵn sàng cao. Nó hoạt động như một target trong bảng định tuyến của Amazon VPC, giúp lưu lượng truy cập được định tuyến ra ngoài Internet bằng cách biên dịch địa chỉ mạng của EC2 thành địa chỉ Public IP đã được gán cho nó.\nCụ thể hơn, các EC2 Instance bên trong VPC chỉ biết các địa chỉ Private IP được gán cho nó, nhưng khi có lưu lượng được gửi từ EC2 ra ngoài Internet, IGW sẽ biên dịch địa chỉ Private IP đó thành địa chỉ Public IP (hoặc địa chỉ EIP, sẽ thảo luận sau) mà gán với EC2, và duy trì mapping 1-1 cho tới khi địa chỉ Public IP bị release.\nKhi EC2 nhận được lưu lượng truy cập từ bên ngoài Internet, IGW sẽ thực hiện dịch địa chỉ Target (địa chỉ Public IP) thành địa chỉ Private IP của EC2 Instance và chuyển tiếp lưu lượng truy cập đến Amazon VPC.\n"
},
{
	"uri": "http://localhost:1313/projects/3-prerequiste/",
	"title": "Preparation steps",
	"tags": [],
	"description": "",
	"content": "Preparation steps In this exercise, we will be constructing a model based on the following diagram:\nContent Create VPC Create Subnet Create Internet Gateway Create Route Table Create Security Group "
},
{
	"uri": "http://localhost:1313/projects/3-prerequiste/3.3-createigw/_index.vi/",
	"title": "Tạo Internet Gateway",
	"tags": [],
	"description": "",
	"content": "Tạo Internet Gateway Trong giao diện VPC\nChọn Internet Gateways Chọn Create internet gateway Thực hiện cấu hình\nName tag, nhập Internet Gateway Chọn Create internet gateway Hoàn thành tạo Internet Gateway Thực hiện Attach VPC\nChọn Actions Chọn Attach to VPC Chọn ASG, VPC ID sẽ được tự động điền. Chọn Attach intermet gateway Khi attach thành công State internet gateway sẽ chuyển sang Attached "
},
{
	"uri": "http://localhost:1313/projects/5-vpnsitetosite/5.2-vpnsitetosite/5.2.3-createvpnconnection/_index.vi/",
	"title": "Tạo kết nối VPN",
	"tags": [],
	"description": "",
	"content": "Tạo kết nối VPN Truy cập VPC\nChọn Site-to-Site VPN Connections Chọn Create VPN Connection Trong giao diện Create VPN Connection\nName tag, nhập VPN Connection Target Gateway Type: Chọn Virtual Private Gateway Virtual Private Gateway: Chọn VPN Gateway Customer Gateway: Existing Customer Gateway ID: Chọn Customer Gateway Tiếp tục thực hiện cấu hình\nRouting Options: Static Static IP Prefixes: 10.11.0.0/16. Đây là giải địa chỉ IP ở môi trường Onpremise giả lập. Các cấu hình khác giữ nguyên mặc định. Chọn Create VPN Connection Đợi khoảng 5 phút sau, hoàn tất tạo VPN Connection Cấu hình propagation cho các route table\nTrong giao diện VPC, chọn Route Tables Chọn Route table - Public Chọn Route Propagation Chọn Edit route propagation Trong giao diện Edit route propagation\nChọn Enable Chọn Save Hoàn tất và kiểm tra lại Route Propagation đã chuyển sang Yes Tương tự Route Propagation đối với Private subnet. "
},
{
	"uri": "http://localhost:1313/projects/4-createec2server/4.3-natgateway/_index.vi/",
	"title": "Tạo NAT Gateway",
	"tags": [],
	"description": "",
	"content": "Tạo NAT Gateway Tạo một địa chỉ Elastic IP Truy cập EC2\nChọn Elastic IPs Chọn Allocate Elastic IP address Trong giao diện Allocate Elastic IP address\nPublic IPv4 address pool, chọn Amazon\u0026rsquo;s pool of IPv4 addresses Chọn Allocate Chúng ta vừa tạo thành công một địa chỉ Public IP Address Truy cập vào VPC\nChọn NAT Gateways Create NAT gateway Trong giao diện NAT gateway\nName, nhập NAT gateway Subnet, chọn Public subnet 2 Connectivity type, chọn Public Elastic IP allocation ID, chọn Elastic IP vừa tạo. Chọn Create NAT gateway Thành công tạo NAT gateway Tạo Route table - Private và gáng vào các private subnet. Trong giao diện VPC\nChọn Route Tables Chọn Create route table Trong giao diện Route table\nName, nhập Route table - Private VPC, chọn ASG vpc Chọn Cretae route table Hoàn thành tạo Route table - Private Trong giao diện Route table - Private\nChọn Subnet Associations Chọn Edit subnet associations Trong giao diện Edit subnet associations\nChọn 2 private subnet Chọn Save associations Trong giao diện Route table - Private\nChọn Routes Chọn Edit routes Trong giao diện Edit routes\nChọn Add route Chọn Destination: 0.0.0.0/0 Target: NAT Gateway Chọn Save changes Kiểm tra lại Routes Kiểm tra ping amazon.com thành công từ EC2 Private. ping amazon.com -c5 "
},
{
	"uri": "http://localhost:1313/projects/2-project-002/2.3-vpc-resource-map/",
	"title": "VPC Resource Map",
	"tags": [],
	"description": "",
	"content": "VPC Resource Map To begin, follow these steps to access the VPC Resource Map in the VPC console:\nSelect an existing VPC. In the details section, go to the \u0026ldquo;Resource map\u0026rdquo; tab. Here, you can observe the resources within your VPC and the relationships among them. Hovering over a resource highlights connected lines and related resources. Clicking on a resource reveals brief details and a link to view further information about that resource.\nGetting Started with VPC Creation Experience Enhance your workflow for creating a new high-availability three-tier VPC using the VPC creation experience:\nChoose Create VPC and then select VPC and more in the VPC console. Preview all VPC resources you\u0026rsquo;re about to create on a single page. Name tag auto-generation: Define a prefix for Name tags, influencing the tags for all previewed VPC resources. Customize individual Name tags by clicking on each resource.\nAdjust the default CIDR value (10.0.0.0/16) by clicking the IPv4 CIDR block field and using the CIDR joystick. Move through CIDR blocks within the /16 network mask.\nChoose the number of Availability Zones (AZs) up to 3, affecting the count of public and private subnets to be created.\nFor a three-AZ high-availability VPC, select 6 private subnets. In the preview, verify the relationships and routes in the subnets.\nAdd NAT gateways and VPC endpoints as needed. Set the number of NAT gateways per AZ for high availability. Opt for the S3 Gateway endpoint for more secure Amazon S3 traffic routing.\nEasily assign additional tags to VPC resources. Click \u0026ldquo;Add new tag,\u0026rdquo; provide a Key (e.g., \u0026ldquo;environment\u0026rdquo;) and Value (e.g., \u0026ldquo;test\u0026rdquo;).\nAt the bottom of the page, select \u0026ldquo;Create VPC\u0026rdquo; and monitor the resource creation process, including the IDs of the resources being generated. Validate resources before proceeding. Once resources are created, click \u0026ldquo;View VPC\u0026rdquo; to access the VPC resource map and visualize the setup. "
},
{
	"uri": "http://localhost:1313/projects/2-project-002/2.3-vpc-resource-map/_index.vi/",
	"title": "VPC Resource Map",
	"tags": [],
	"description": "",
	"content": "VPC Resource Map Để bắt đầu, hãy chọn một VPC đã tồn tại trong bảng điều khiển VPC. Trong phần chi tiết, hãy chọn tab Sơ đồ Tài nguyên. Tại đây, bạn có thể xem các tài nguyên trong VPC của bạn và mối quan hệ giữa các tài nguyên đó.\nKhi trỏ chuột qua một tài nguyên, bạn có thể xem các tài nguyên liên quan và các đường nối được đánh dấu. Nếu bạn nhấp chuột để chọn tài nguyên, bạn có thể xem một số dòng chi tiết và một liên kết để xem chi tiết của tài nguyên đã chọn.\nBắt đầu sử dụng trải nghiệm tạo VPC Bản đồ tài nguyên Amazon VPC hiện nay có sẵn trong tất cả các Vùng AWS mà Amazon VPC có sẵn, và bạn có thể bắt đầu sử dụng nó từ hôm nay.\nTrải nghiệm tạo bản đồ tài nguyên VPC và tạo mới chỉ hiển thị VPC, subnet, bảng định tuyến, cổng tiếp cận Internet, cổng NAT và cổng tiếp cận Amazon S3.\nBản đồ tài nguyên Amazon Virtual Private Cloud (VPC) là một tính năng cho phép bạn xem và quản lý tất cả các tài nguyên trong mạng VPC của bạn tại một nơi. Với bản đồ tài nguyên VPC, bạn có thể xem mối quan hệ giữa VPC, subnet, bảng định tuyến, cổng tiếp cận Internet, cổng NAT và cổng tiếp cận Amazon S3, giúp cho bạn hiểu rõ cấu trúc và kết nối của mạng của bạn.\nBạn có thể sử dụng bản đồ tài nguyên VPC để tạo, chỉnh sửa và xóa các tài nguyên VPC, cũng như hình dung luồng truyền dữ liệu mạng giữa chúng. Điều này rất hữu ích khi bạn làm việc với cấu hình VPC phức tạp và muốn đảm bảo mạng của bạn.\n"
},
{
	"uri": "http://localhost:1313/projects/5-vpnsitetosite/5.2-vpnsitetosite/5.2.4-configurecustomergw/_index.vi/",
	"title": "Cấu hình Customer Gateway",
	"tags": [],
	"description": "",
	"content": "Cấu hình Customer Gateway Truy cập vào VPC\nChọn Site-to-Site VPN Connection Chọn VPN Connection đã tạo Chọn Download Configuration Trong hộp thoại Download Configuration, lựa chọn appliance phù hợp với bạn: Trong bài thực hành này, chúng ta sẽ sử dụng OpenSwan.\nVendor: Chọn OpenSwan Platform: Chọn OpenSwan Software: Chọn OpenSwan 2.6.38+ IKE version: Chọn ikev1 Chọn Download. Lưu thông tin file câu hình vào thư mục chúng ta sử dụng lưu trữ key pair và công cụ cho bài lab.\nSau đó dựa vào cấu hình được cung cấp, bạn thay đổi các thông tin phù hợp và cấu hình cho thiết bị của mình. Kết nối ssh vào EC2 Customer Gateway. Cài đặt OpenSwan sudo su\ryum install openswan -y Kiểm tra cấu hình file /etc/ipsec.conf vi /etc/ipsec.conf Kiểm tra cấu hình đang như hình dưới. Ấn phím ESC và tổ hợp :q! để thoát khỏi trình chỉnh sửa vi. Cấu hình file /etc/sysctl.conf vi /etc/sysctl.conf Chuyển xuống vị trí cuối cùng trong file cấu hình. Ấn phím i để tiến hành chỉnh sửa file. Thêm cấu đoạn sau vào cuối tập tin cấu hình. net.ipv4.ip_forward = 1\rnet.ipv4.conf.all.accept_redirects = 0\rnet.ipv4.conf.all.send_redirects = 0 Ấn phím ESC và tổ hợp :wq! để lưu file cấu hình. Sau đó để áp dụng cấu hình này, chạy lệnh: sysctl -p Tiếp theo chúng ta sẽ cấu hình file /etc/ipsec.d/aws.conf vi /etc/ipsec.d/aws.conf Ấn phím i để tiến hành chỉnh sửa file. Thêm cấu đoạn sau vào tập tin cấu hình. Chúng ta sẽ tạo 2 Tunnel với thông tin được lấy từ file cấu hình VPN Connection bạn đã tải về và lưu chung vào thư mục chứa key pair trước đó. Đảm bảo bạn chỉnh sửa địa chỉ IP và lớp mạng phù hợp trước khi copy đoạn cấu hình trên. Đối với Amazon Linux thì chúng ta sẽ bỏ dòng auth=esp trong file cấu hình gốc. Vì chúng ta chỉ có 1 public IP addres cho Customer Gateway nên sẽ cần thêm cấu hình overlapip=yes. leftid: IP Public Address phía Onprem. ( Ở đây chính là IP public của EC2 Customer Gateway trong ASG VPN VPC) . right: IP Public Address phía AWS VPN Tunnel. leftsubnet: CIDR của Mạng phía Local (Nếu có nhiều lớp mạng, bạn có thể để là 0.0.0.0/0). rightsubnet: CIDR của Mạng phía Private Subnet trên AWS. conn Tunnel1\rauthby=secret\rauto=start\rleft=%defaultroute\rleftid=13.229.235.99\rright=52.220.214.148\rtype=tunnel\rikelifetime=8h\rkeylife=1h\rphase2alg=aes128-sha1;modp1024\rike=aes128-sha1;modp1024\rkeyingtries=%forever\rkeyexchange=ike\rleftsubnet=\u0026lt;LOCAL NETWORK\u0026gt;\rrightsubnet=\u0026lt;REMOTE NETWORK\u0026gt;\rdpddelay=10\rdpdtimeout=30\rdpdaction=restart_by_peer\roverlapip=yes\rconn Tunnel2\rauthby=secret\rauto=start\rleft=%defaultroute\rleftid=13.229.235.99\rright=54.179.66.207\rtype=tunnel\rikelifetime=8h\rkeylife=1h\rphase2alg=aes128-sha1;modp1024\rike=aes128-sha1;modp1024\rkeyingtries=%forever\rkeyexchange=ike\rleftsubnet=\u0026lt;LOCAL NETWORK\u0026gt;\rrightsubnet=\u0026lt;REMOTE NETWORK\u0026gt;\rdpddelay=10\rdpdtimeout=30\rdpdaction=restart_by_peer\roverlapip=yes Ấn phím ESC và tổ hợp :wq! để lưu file cấu hình. Kiểm tra bước tiếp theo trong file cấu hình chúng ta đã tải xuống. Tạo mới và cấu hình file etc/ipsec.d/aws.secrets Tạo tập tin mới với cấu hình sau để thiết lập chứng thực cho 2 Tunnel.\nChạy lệnh touch /etc/ipsec.d/aws.secrets để tạo tập tin. touch /etc/ipsec.d/aws.secrets - Chạy lệnh **vi /etc/ipsec.d/aws.secrets**\rvi /etc/ipsec.d/aws.secrets Ấn phím i để tiến hành chỉnh sửa file. - Thêm cấu đoạn sau vào cuối tập tin cấu hình (đoạn cấu hình này ở bước 5 của **IPSEC Tunnel #1** và **IPSEC Tunnel #2**)\r13.229.235.99 52.220.214.148: PSK \u0026#34;zkq_xvwpA5HNictmh6x6tVCKozVHxcpA\u0026#34;\r13.229.235.99 54.179.66.207: PSK \u0026#34;c0WdOkBj4gtJ2jaGrmeA2bZ_4ZaN50o3\u0026#34; - Ấn phím **ESC** và tổ hợp **:wq!** để lưu file cấu hình.\r- Chạy lệnh **cat /etc/ipsec.d/aws.secrets** để kiểm tra nội dung file cấu hình\rKhởi động lại Network service \u0026amp; IPSEC service service network restart chkconfig ipsec on\rservice ipsec start\rservice ipsec status Nếu status tunnel vẫn chưa chạy đúng, sau khi kiểm tra và cập nhật cấu hình bạn sẽ cần chạy lệnh để restart lại service network và IPsec : sudo service network restart\rsudo service ipsec restart Sau khi hoàn tất cấu hình.Hãy thử thực hiện lệnh ping từ phía máy chủ Customer Gateway tới máy chủ EC2 Private. Nếu cấu hình VPN thành công bạn sẽ được kết quả như dưới đây. ping \u0026lt;EC2 Private IP\u0026gt; -c5 Sau khi hoàn tất cấu hình.Hãy thử thực hiện lệnh ping từ phía máy chủ EC2 Private tới máy chủ Customer Gateway . Nếu cấu hình VPN thành công bạn sẽ được kết quả như dưới đây. ping \u0026lt;Customer gateway instance IP\u0026gt; -c5 "
},
{
	"uri": "http://localhost:1313/projects/4-createec2server/",
	"title": "Create EC2 Server",
	"tags": [],
	"description": "",
	"content": "Create EC2 Server In this step, we will create 2 EC2 servers (EC2 instances) following the architecture shown below:\nContent Create EC2 Server Test Connection Create NAT Gateway Using Reachability Analyzer "
},
{
	"uri": "http://localhost:1313/projects/3-prerequiste/3.4-cretaeroutetable/",
	"title": "Create Route Table",
	"tags": [],
	"description": "",
	"content": "Create Route Table for Outbound Internet Routing via Internet Gateway In the VPC interface:\nSelect Route Tables. Click on Create route table. Configure the Route table:\nEnter a Name: Route table-Public Choose the VPC: Select ASG VPC (VPC ID will auto-fill). Click on Create route table. Complete creating the Route table.\nTo make route edits:\nSelect Actions. Choose Edit routes. In the Edit routes interface:\nClick on Add route. Fill in the Destination CIDR: 0.0.0.0/0 representing the Internet. In the Target section, select Internet Gateway, then choose the created Internet Gateway (Gateway ID auto-fills). Click Save changes. Review and confirm the updated Routes.\nEnsure that Route table - Public is selected.\nSelect Subnet Associations. Click on Edit subnet associations. In the Edit subnet associations step:\nAdjust the width of the Subnet ID column by dragging the pane to the right. Select the appropriate 2 public subnets that were created. Click on Save associations.\nReview and confirm the updated Subnet associations.\n"
},
{
	"uri": "http://localhost:1313/projects/5-vpnsitetosite/5.2-vpnsitetosite/5.2.4-configurecustomergw/",
	"title": "Customer Gateway Configuration",
	"tags": [],
	"description": "",
	"content": "Configure Customer Gateway Access to VPC Select Site-to-Site VPN Connection Select VPN Connection created Select Download Configuration Download Configuration In the Download Configuration dialog, choose the appropriate appliance, e.g., OpenSwan. Vendor: Select OpenSwan Platform: Select OpenSwan Software: Select OpenSwan 2.6.38+ IKE version: Select ikev1 Select Download. Save the image file information to the folder used for storing the key pair and lab tools. Modify the configuration based on your device. Connect SSH to EC2 Customer Gateway.\nInstall OpenSwan sudo su\ryum install openswan -y Check the configuration file /etc/ipsec.conf vi /etc/ipsec.conf Check the configuration is as shown below. Press the ESC key and the combination :q! to exit the vi editor. Configuration file /etc/sysctl.conf vi /etc/sysctl.conf Move down to the last position in the configuration file. Press the i key to proceed with editing the file. Add the following configuration at the end of the configuration file. net.ipv4.ip_forward = 1\rnet.ipv4.conf.all.accept_redirects = 0\rnet.ipv4.conf.all.send_redirects = 0 Press the ESC key and the combination :wq! to save the configuration file. Then to apply this configuration, run the command: sysctl -p Next we will configure the file /etc/ipsec.d/aws.conf vi /etc/ipsec.d/aws.conf Press i to proceed to edit the file. Add the following configuration to the configuration file. We will create 2 Tunnel with information taken from the VPN Connection configuration file you downloaded and saved in the folder containing the key pair earlier. Make sure you edit the IP address and network class accordingly before copying the above configuration. For Amazon Linux, we will omit the auth=esp line in the original configuration file. Since we only have 1 public IP addres for Customer Gateway, we will need to configure overlapip=yes. leftid: IP Public Address on the Onprem side. (Here is public IP of EC2 Customer Gateway in ASG VPN VPC) . right: IP Public Address on AWS VPN Tunnel side. leftsubnet: CIDR of Local Side Network (If there are multiple network layers, you can leave it as 0.0.0.0/0). rightsubnet: CIDR of Private Subnet on AWS. conn Tunnel1\rauthby=secret\rauto=start\rleft=%defaultroute\rleftid=13.229.235.99\rright=52.220.214.148\rtype=tunnel\rikelifetime=8h\rkeylife=1h\rphase2alg=aes128-sha1;modp1024\rike=aes128-sha1;modp1024\rkeyingtries=%forever\rkeyexchange=ike\rleftsubnet=\u0026lt;LOCAL NETWORK\u0026gt;\rrightsubnet=\u0026lt;REMOTE NETWORK\u0026gt;\rdpddelay=10\rdpdtimeout=30\rdpdaction=restart_by_peer\roverlapip=yes\rconn Tunnel2\rauthby=secret\rauto=start\rleft=%defaultroute\rleftid=13.229.235.99\rright=54.179.66.207\rtype=tunnel\rikelifetime=8h\rkeylife=1h\rphase2alg=aes128-sha1;modp1024\rike=aes128-sha1;modp1024\rkeyingtries=%forever\rkeyexchange=ike\rleftsubnet=\u0026lt;LOCAL NETWORK\u0026gt;\rrightsubnet=\u0026lt;REMOTE NETWORK\u0026gt;\rdpddelay=10\rdpdtimeout=30\rdpdaction=restart_by_peer\roverlapip=yes Press the ESC key and the combination :wq! to save the configuration file. Check the next step in the configuration file we downloaded. Create and configure the file etc/ipsec.d/aws.secrets Create a new file with the following configuration to set up authentication for the 2 Tunnels.\nRun the command touch /etc/ipsec.d/aws.secrets to create the file. touch /etc/ipsec.d/aws.secrets - Run the command **vi /etc/ipsec.d/aws.secrets**\rvi /etc/ipsec.d/aws.secrets Press the i key to edit the file.\nAdd the following configuration to the end of the configuration file (this configuration is in step 5 of IPSEC Tunnel #1 and IPSEC Tunnel #2) 13,229,235.99 52,220,214,148: PSK \u0026#34;zkq_xvwpA5HNictmh6x6tVCKozVHxcpA\u0026#34;\r13,229,235.99 54,179,66,207: PSK \u0026#34;c0WdOkBj4gtJ2jaGrmeA2bZ_4ZaN50o3\u0026#34; - Press the **ESC** key and the combination **:wq!** to save the configuration file.\r- Run the command **cat /etc/ipsec.d/aws.secrets** to check the content of the configuration file\rRestart Network service \u0026amp; IPSEC service service network restart\rchkconfig ipsec on\rservice ipsec start\rservice ipsec status If the status tunnel is still not running correctly, after checking and updating the configuration you will need to run the command to restart service network and IPsec : sudo service network restart\rsudo service ipsec restart After completing the configuration.Try to ping from the Customer Gateway server side to the EC2 Private server. If the VPN configuration is successful you will get the result as below. ping \u0026lt;EC2 Private IP\u0026gt; -c5 After completing the configuration.Try to ping from the EC2 Private server side to the Customer Gateway server. If the VPN configuration is successful you will get the result as below. ping \u0026lt;Customer gateway instance IP\u0026gt; -c5 "
},
{
	"uri": "http://localhost:1313/projects/1-project-001/1.4-natgateway/",
	"title": "NAT Gateway",
	"tags": [],
	"description": "",
	"content": "NAT Gateway By default, any EC2 running inside a Private subnet will not be able to communicate with the Internet through the IGW. This situation becomes problematic when the EC2 needs to access the Internet for security updates, patch downloads, or application software updates.\nRecognizing this need, AWS offers two methods for granting EC2s in a Private subnet access to the Internet: NAT Instance and NAT Gateway. In most scenarios, it is advisable to opt for NAT Gateway over NAT Instance due to its enhanced availability, bandwidth, and reduced administrative overhead.\nTo set up a NAT gateway, you are required to specify a public subnet and an Elastic IP address. Ensure that the chosen Elastic IP address is not associated with any other instances or network interfaces.\nIn situations where transitioning from a NAT instance to a NAT gateway is desired, it is possible to reuse the Elastic IP address assigned to the NAT instance. However, prior to doing so, it is essential to disassociate the IP address from the NAT Instance.\nTip: Neither the NAT Gateway nor the NAT instance supports direct inbound traffic from the internet.\n"
},
{
	"uri": "http://localhost:1313/projects/1-project-001/1.4-natgateway/_index.vi/",
	"title": "NAT Gateway",
	"tags": [],
	"description": "",
	"content": "NAT Gateway Mặc định, mọi EC2 chạy bên trong Private subnet thì sẽ không có khả năng giao tiếp với Internet thông qua IGW. Từ đó vấn đề phát sinh khi EC2 đó cần truy cập ra ngoài Internet để áp dụng các bản cập nhật bảo mật, tải xuống các bản vá hoặc cập nhật phần mềm ứng dụng.\nNắm bắt được nhu cầu đó, AWS cung cấp 2 phương thức cho phép các EC2 bên trong Private subnet có quyền được truy cập Internet, đó là NAT Instance và NAT Gateway. Với các trường hợp thông thường, thì ta nên sử dụng NAT Gateway thay cho NAT Instance. NAT Gateway đảm bảo tính sẵn sàng và băng thông cao hơn, đồng thời đòi hỏi ít nỗ lực quản trị hơn so với NAT Instance.\nĐể tạo một một NAT gateway, ta phải chỉ định một mạng con (public) và một địa chỉ Elastic IP. Cần đảm bảo địa chỉ Elastic IP đang không được liên kết với bất cứ Instance hoặc một Network interface nào khác.\nTrường hợp ta muốn migrate từ NAT instance sang NAT gateway, ta có thể sử dụng lại địa chỉ Elastic IP của NAT instance. Nhưng trước hết ta cần phải tách địa chỉ IP ra khỏi NAT Instance.\nNAT Gateway và NAT instance đều không hỗ trợ traffic chiều vào trực tiếp từ internet.\n"
},
{
	"uri": "http://localhost:1313/projects/4-createec2server/4.4.-createreachabilityanalyzer/_index.vi/",
	"title": "Sử dụng Reachability Analyzer",
	"tags": [],
	"description": "",
	"content": "Sử dụng Reachability Analyzer Truy cập vào giao diện VPC\nChọn Reachability Analyzer Chọn Create and analyze path Thực hiện Path Configuration\nName tag, nhập EC2 private with EC2 Public Đối với Source type, chọn Instance Chọn source là EC2 Public Đối với Destination type, chọn Instance Đối với Destination, chọn EC2 Private Các thông số còn lại để mặc định. Chọn Create and analyze path Đợi 5 phút sau sẽ hiển trạng thái Reachable Sau đó, xem path details. Xem reverse path details. "
},
{
	"uri": "http://localhost:1313/projects/4-createec2server/_index.vi/",
	"title": "Tạo máy chủ EC2 ",
	"tags": [],
	"description": "",
	"content": "Tạo máy chủ EC2 Ở bước này chúng ta sẽ tạo 2 máy chủ EC2 ( EC2 instance ) như kiến trúc dưới đây.\nNội dung Tạo máy chủ EC2 Kiểm tra kết nối Tạo NAT Gateway Sử dụng Reachability Analyzer Tạo EC2 Instance Connect Endpoint "
},
{
	"uri": "http://localhost:1313/projects/3-prerequiste/3.4-cretaeroutetable/_index.vi/",
	"title": "Tạo Route Table",
	"tags": [],
	"description": "",
	"content": "Tạo Route Table định tuyến đi ra ngoài internet thông qua Internet Gateway. Trong giao diện VPC\nChọn Route Tables Chọn Create route table Tiến hành cấu hình Route table\nName, nhập Route table-Public VPC, chọn ASG VPC. VPC id sẽ được tự động điền vào. Chọn Cretae route table Hoàn thành tạo Route table Thực hiện Edit route\nChọn Actions Chọn Edit routes Trong giao diện Edit routes\nChọn Add route Điền phần Destination CIDR : 0.0.0.0/0 đại diện cho Internet. Trong phần Target chọn Internet Gateway, sau đó chọn Internet Gateway chúng ta đã tạo. Internet Gateway ID sẽ được tự động điền. Chọn Save changes Hoàn thành và kiểm tra lại Routes Đảm bảo Route table - Public đang được chọn.\nChọn subnet associations Chọn Edit subnet associations Trong bước Edit subnet associations\nMở rộng cột Subnet ID bằng cách kéo thanh ngăn sang phải. Chọn đúng 2 subnet public chúng ta đã tạo. Chọn Save associations Hoàn thành và kiểm tra lại Subnet associations "
},
{
	"uri": "http://localhost:1313/projects/4-createec2server/4.4.-createreachabilityanalyzer/",
	"title": "Using Reachability Analyzer",
	"tags": [],
	"description": "",
	"content": "Using Reachability Analyzer Access to VPC interface\nSelect Reachability Analyzer Select Create and analyze path Implement Path Configuration\nName tag, enter EC2 private with EC2 Public For Source type, select Instance Select source as EC2 Public For Destination type, select Instance For Destination, select EC2 Private The remaining parameters are left to default. Select Create and analyze path Wait 5 minutes will show the Reachable status Then see path details. View reverse path details. "
},
{
	"uri": "http://localhost:1313/projects/5-vpnsitetosite/_index.vi/",
	"title": "Cấu hình Site to Site VPN",
	"tags": [],
	"description": "",
	"content": "Chúng ta có thể kết nối TTDL On-premise tới Amazon VPC sử dụng VPN cứng hoặc mềm tùy thuộc mục đích và nhu cầu sử dụng thực thế.\nĐể thiết lập kết nối VPN Site to Site, chúng ta sẽ cần tạo và cấu hình Virtual Private Gateway VPG và Customer Gateway CGW.\nVirtual Private Gateway (VPG) là một trung tâm điều khiển kết nối the virtual private network (VPN) được cài đặt ở đầu AWS. A Customer Gateway (CGW) là thành phần đại diện cho thiết bị VPN cứng hoặc mềm được cài đặt ở đầu Khách hàng. VPN tunnel sẽ được thiết lập ngay sau khi lưu lượng dữ liệu được truyền tải giữa AWS và hệ thống mạng của khách hàng. Trong kết nối đó, ta phải chỉ rõ loại định tuyến sẽ được sử dụng để đảm bảo an toàn cũng như chất lượng về mặt truyền tải dữ liệu.\nNếu CGW ở phía khách hàng có hỗ trợ Border Gateway Protocol (BGP), thì trong cấu hình VPN connection ta bắt buộc phải đặt định tuyến là dynamic routing.\nCòn ngược lại ta phải cấu hình định tuyến kết nối là static routing. Trường hợp sử dụng static routing, ta phải nhập chính xác những định tuyến cần thiết cho việc kết nối từ phía Khách hàng tới VPG được thiết lập ở đầu AWS. Đồng thời định tuyến cho VPC cũng phải được cấu hình propagated để cho phép các tài nguyên có thể trao đổi dữ liệu đi ra và đi vào trong kết nối VPN tunnel giữa AWS với hệ thống mạng của Khách hàng.\nAmazon VPC cung cấp nhiều loại CGWs, và từng CGW được gán với một VPG nhưng 1 VPG có thể kết hợp với nhiều CGW (many-to-one design). Để hỗ trợ mô hình này thì địa chỉ IP của CGW phải là duy nhất trong một region.\nAmazon VPC cũng cung cấp các thông tin cần thiết cho Nhân viên quản trị mạng có thể cấu hình CGW và thiết lập kết nối VPN tới VPG trên AWS. Kết nối VPN luôn bao gồm 2 Internet Protocol Security (IPSec) tunnels để đảm bảo tính sẵn sàng cao của kết nối.\nBên dưới là những đặc điểm quan trọng mà ta cần nắm về VPG, CGW, and VPN:\nVPG là thành phần đầu cuối của VPN tunnel nằm trên AWS. CGW có thể là thiết bị phần cứng hoặc ứng dụng phần mềm nằm ở đầu Khách hàng trong kết nối VPN tunnel. Bạn phải khởi tạo kết nối VPN tunnel từ CGW tới VPG. VPG hỗ trợ cả dynamic routing (BGP) và static routing. Kết nối VPN luôn có 2 tunnels nhằm đảm bảo tính sẵn sàng cao cho kết nối với VPC từ site Khách hàng. Bài lab giúp chúng ta học được cách thiết lập một kết nối Site to Site VPN trong AWS. Trong thực tế, giải pháp này khá được ưa chuộng do ưu điểm giá thành rẻ, đồng thời rất dễ cấu hình do AWS cung cấp hướng dẫn cho từng loại thiết bị phía đầu Customer. Việc Customer bận tâm duy nhất đó là chuẩn bị đường internet để từ đó tạo đường hầm an toàn bí mật (sử dụng IPSec) kết nối tới AWS thông qua AWS VPN tunnel.\nTrong phạm vi bài lab, giả lập rằng chúng ta có Main office ( VPC ASG ) và Branch office ( VPC ASG VPN ) đặt tại 2 VPC thuộc 2 AZ khác nhau để có sự khác biệt về mặt network. Trên mỗi VPC thực hiện tạo EC2 cho phép SSH từ bên ngoài, nhưng không có khả năng kết nối và ping lẫn nhau sử dụng địa chỉ Private IP của mỗi EC2. Việc ta cần làm là cấu hình VPN để các địa chỉ Private IP có thể ping được lẫn nhau sử dụng VPN Site-to-Site.\nNội dung:\nTạo ASG VPN VPC và subnet Cấu hình Site to Site VPN và kiểm tra kết nối bằng private IP "
},
{
	"uri": "http://localhost:1313/projects/4-createec2server/4.5-eicendpoint/",
	"title": "Create EC2 Instance Connect Endpoint (Optional)",
	"tags": [],
	"description": "",
	"content": "EC2 Instance Connect Endpoint In step 4.2 test connection, to access EC2 Private you need to:\nUse the pscp tool to copy the key pair from our machine to EC2 Public Access EC2 Public Grant permission to key pair SSH to EC2 Private server -\u0026gt; As you can see, now EC2 Public acts as Bastion Host and we need to pay for this instance. So is there a way to save costs, reduce configuration steps while still accessing EC2 Private and ensuring security?\nOn June 13, 2023, AWS launched the EC2 Instance Connect Endpoint (EIC Endpoint) function to help customers access EC2 instances without needing public IP addresses, through the protocol SSH and RDP.\nEIC Endpoint replaces Bastion Host, which means eliminating the workload: patching, managing, auditing and the cost of the previous Bastion Host instance. There are no additional costs for EIC Endpoint, however data transfer costs will apply\nArchitecture description EIC Endpoint Create Security Group for EIC Endpoint\nIn the search box, enter: security groups, in the features section select Security groups Select Create security group In the Security group name section, enter EIC Endpoint\nIn the Description section, enter Allow SSH for MyIP\nIn the VPC section, select ASG VPC\nSelect Add rule In the Type section, select protocol SSH\nIn the Source section, select My IP with the meaning: only allow your IP address with SSH protocol to pass through this Security group\nThe remaining values ​​remain the same.\nSelect Create security group Create EC2 Instance Connect Endpoint\nIn the search box, enter: endpoint services , in the Features section select endpoint services Select Create endpoint In the Name tag section, enter: EC2 private endpoint\nIn the Service category section, select: EC2 Instance Connect Endpoint\nIn VPC section, select ASG-VPC In the Security groups section, select: EIC Endpoint created in step 1\nIn the Subnet section, select: subnet-0da7e5096deb895e1 (Private subnet 2) is the subnet of EC2 Private\nSelect Create endpoint Wait for Status to change to Available and go to the next step Access EC2 Private via EC2 Instance Connect Endpoint\nAt the EC2 interface, check the box of EC2 Private\nIn the Public IPv4 address section, check and see: there is no Public IP value - meaning we cannot access this EC2 via Public IP\nSelect Connect In the Connection Type section, select Connect using EC2 Instance Connect Endpoint\nIn the EC2 Instance Connect Endpoint section, select the EIC just created in step 2\nSelect Connect Congratulations, you have successfully accessed EC2 Private via EC2 Instance Connect Endpoint only from your IP address Note:\nNormally, you will do the lab using a user with AdministratorAccess permission . In the opposite case, you need to refer to the documentation to grant the User permission to operate the above steps. IAM permissions to use EC2 Instance Connect Endpoint "
},
{
	"uri": "http://localhost:1313/projects/3-prerequiste/3.5-createsecuritygroup/",
	"title": "Create Security Group",
	"tags": [],
	"description": "",
	"content": "Create Security Groups Create Security Group for Servers in Public Subnet In the VPC interface:\nSelect Security Group Select Create security group Configure the Security Group:\nSecurity Group name: Enter Public subnet - SG Description: Enter Allow SSH and Ping for servers in the public subnet. Select the ASG VPC Configure Inbound rules:\nIn Inbound rules, click Add rule. Select Type: SSH and Source: My IP. (Use your public IPv4 address) Select Add rule to add a new rule. Select Type: All ICMP - IPv4 and Source: Anywhere. Allow ping from any IP address. Check Outbound rules and select Create security group\nComplete the creation of the security group for the server located in the public subnet\nCreate a Security Group for a Server in a Private Subnet In the VPC interface:\nSelect Security Groups Select Create security group Configure the Security Group:\nIn the Security group name field, enter Private subnet - SG In the Description section, enter Allow SSH and Ping for servers in the private subnet. Select the VPC named ASG Configure Inbound rules:\nIn Inbound rules, select Add rule. Select Type: SSH and leave Source: Custom. Search and select Public subnet SG to allow SSH from servers in the public subnet. Select Add rule to add a new rule:\nSelect Type: All ICMP IPv4 and Source: Anywhere. Allow ping from any IP address. Select Create security group\nTwo Security Groups have been created for servers located in the public and private subnets:\nNext, we will proceed to create two EC2 servers. "
},
{
	"uri": "http://localhost:1313/projects/5-vpnsitetosite/5.2-vpnsitetosite/5.2.5-modifyvpn/",
	"title": "Modify AWS VPN Tunnel",
	"tags": [],
	"description": "",
	"content": "Modify AWS VPN Tunnel Access the VPC Interface:\nGo to Site-to-Site VPN connections. Choose the recently created VPN. Click on Actions. Select Modify VPN tunnel options. Choose the VPN Tunnel Outside IP Address:\nConfirm UP Tunnel Modification and Keep Other Parameters Default:\nEnable Tunnel Activity Log:\nEnable Tunnel activity log. Choose an existing Amazon CloudWatch log group (or create one in CloudWatch if not already done). Set Output format to text. Click Save changes. Access CloudWatch:\nNavigate to Log groups. Go to Log streams. Choose a log stream. View Log Events:\nRepeat the Process for the Remaining Tunnel(s):\nVerify That Both Tunnels are UP:\n"
},
{
	"uri": "http://localhost:1313/projects/5-vpnsitetosite/",
	"title": "Setting Up Site-to-Site VPN Connection in AWS",
	"tags": [],
	"description": "",
	"content": "In this guide, we will discuss how to connect an On-premise data center to Amazon VPC using a hard or soft VPN, depending on the specific requirements. To establish a Site-to-Site VPN connection, the following steps need to be taken:\n1. Virtual Private Gateway (VPG) and Customer Gateway (CGW) Setup Virtual Private Gateway (VPG): This serves as the control center that connects the virtual private network (VPN) within AWS.\nCustomer Gateway (CGW): This component represents the hard or soft VPN device located at the Client\u0026rsquo;s end.\n2. VPN Tunnel Establishment A VPN tunnel will be initiated as soon as data traffic is exchanged between AWS and the client\u0026rsquo;s network. It is important to specify the routing type to ensure secure and efficient data transmission:\nIf the CGW on the client side supports Border Gateway Protocol (BGP), dynamic routing should be configured for the VPN connection.\nIf not, static routing must be set up. For static routing, specific routes must be entered to establish the connection from the client\u0026rsquo;s side to the VPG at AWS. Additionally, the VPC routing must be configured to allow seamless data exchange within the VPN tunnel.\n3. VPG, CGW, and VPN Features Some key features of VPG, CGW, and VPN include:\nVPG: The terminal component of the VPN tunnel within AWS.\nCGW: Can be either a hardware device or a software application located at the Client\u0026rsquo;s end in the VPN tunnel.\nVPN tunnel connections are initiated from CGW to VPG.\nVPG supports both dynamic routing (BGP) and static routing.\nEach VPN connection comprises two tunnels for high availability.\n4. Lab Setup and Configuration The lab provides hands-on experience in setting up a Site-to-Site VPN connection in AWS. This solution is popular due to its cost-effectiveness and ease of configuration, as AWS offers instructions for various types of client devices. The primary responsibility of the customer is to prepare the internet connection, which will establish a secure tunnel (using IPSec) connecting to AWS via the VPN tunnel.\nIn the lab scope, there are two VPCs: the Main office (VPC ASG) and the Branch office (VPC ASG VPN), located in different Availability Zones (AZs) to ensure network diversity. While EC2 instances can be created in each VPC with external SSH access, they cannot communicate or ping each other using private IP addresses. The goal is to configure the VPN to enable private IP addresses to communicate over the Site-to-Site VPN.\nContent: Create ASG VPN VPC and subnet Configure Site to Site VPN and test connection with private IP "
},
{
	"uri": "http://localhost:1313/projects/4-createec2server/4.5-eicendpoint/_index.vi/",
	"title": "Tạo EC2 Instance Connect Endpoint (Optional)",
	"tags": [],
	"description": "",
	"content": "EC2 Instance Connect Endpoint Trong bước 4.2 Kiểm tra kết nối, các bạn thấy rằng: để truy cập vào EC2 Private bạn cần phải:\nDùng công cụ pscp để copy key pair từ máy của chúng ta vào EC2 Public Truy cập vào EC2 Public Cấp quyền cho key pair SSH tới máy chủ EC2 Private -\u0026gt; Như bạn thấy, lúc này EC2 Public đóng vai trò như Bastion Host và chúng ta cần trả chi phí cho instance này. Vậy liệu có cách nào giúp tiết kiệm chi phí, giảm các bước cấu hình mà vẫn truy cập vào EC2 Private và đảm bảo tính bảo mật hay không?\nVào 13/06/2023, AWS ra mắt chức năng EC2 Instance Connect Endpoint (EIC Endpoint) đế giúp cho khách hàng truy cập vào EC2 instance mà không cần đến public IP addresses, thông qua giao thức SSH và RDP.\nEIC Endpoint thay thế Bastion Host, đồng nghĩa loại bỏ khối lượng công việc: patching, managing, auditting và chi phí Bastion Host instance trước đây. Không có chi phí bổ sung dối với EIC Endpoint, tuy nhiên chi phí data transfer sẽ được áp dụng\nKiến trúc mô tả EIC Endpoint Tạo Security Group cho EIC Endpoint\nTại khung search, nhập: security groups, trong mục features chọn Security groups Chọn Create security group Tại mục Security group name, nhập EIC Endpoint\nTại mục Description, nhập Allow SSH for MyIP\nTại mục VPC, chọn ASG VPC\nChọn Add rule Tại mục Type, chọn protocol SSH\nTại mục Source, chọn My IP với ý nghĩa: chỉ cho phép địa chỉ IP của bạn với giao thức SSH được đi qua Security group này\nCác giá trị còn lại vẫn giữ nguyên.\nChọn Create security group Tạo EC2 Instance Connect Endpoint\nTại khung search, nhập: endpoint services , trong mục features chọn endpoint services Chọn Create endpoint Tại mục Name tag, nhập: EC2 private endpoint\nTại mục Service category, chọn: EC2 Instance Connect Endpoint\nTại mục VPC, chọn ASG-VPC Tại mục Security groups, chọn: EIC Endpoint đã tạo ở bước 1\nTại mục Subnet, chọn: subnet-0da7e5096deb895e1 (Private subnet 2) là subnet của EC2 Private\nChọn Create endpoint Đợi Status chuyển thành Available và qua bước tiếp theo Truy cập EC2 Private thông qua EC2 Instance Connect Endpoint\nTại giao diện EC2, tích vào ô vuông của EC2 Private\nTại mục Public IPv4 address, kiểm tra và nhận thấy: không có giá trị Public IP - có nghĩa chúng ta không thể truy cập vào EC2 này thông qua Public IP\nChọn Connect Tại mục Connection Type chọn Connect using EC2 Instance Connect Endpoint\nTại mục EC2 Instance Connect Endpoint chọn EIC vừa tạo ở bước 2\nChọn Connect Chúc mừng bạn đã truy cập thành công EC2 Private thông qua EC2 Instance Connect Endpoint chỉ duy nhất từ địa chỉ IP của bạn Lưu ý:\nThông thường, bạn sẽ làm lab bằng user có quyền Admin, trong trường hợp ngược lại, bạn cần tham khảo thêm tài liệu để cấp quyền cho User được phép thao tác các bước như trên. IAM permissions to use EC2 Instance Connect Endpoint "
},
{
	"uri": "http://localhost:1313/projects/3-prerequiste/3.5-createsecuritygroup/_index.vi/",
	"title": "Tạo Security Group",
	"tags": [],
	"description": "",
	"content": "Tạo Security Group Tạo Security Group cho máy chủ nằm trong Public subnet Trong giao diện VPC\nChọn Security Group Chọn Cretae security group Thực hiện cấu hình Security group\nSecurity Group name, nhập Public subnet - SG Description, nhập Allow SSH and Ping for servers in public subnet. Chọn ASG VPC Thực hiện cấu hình Inbound rules\nTrong Inbound rules, click Add rule.\nChọn Type: SSH và Source: My IP. My IP đại diện cho 1 địa chỉ public IPv4 bạn đang sử dụng(sẽ thay đổi khi bạn đổi mạng)\nChọn Add rule để thêm 1 rule mới.\nChọn Type: All ICMP - IPv4 và Source: Anywhere. Cho phép ping từ bất kì địa chỉ IP nào.\nKiểm tra Outbound rules và chọn Cretae security group Hoàn thành tạo security group cho máy chủ nằm trong Public subnet Tạo Security Group cho máy chủ nằm trong Private subnet Trong giao diện VPC\nChọn Security Groups Chọn Create security group Thực hiện cấu hình Security group\nTrong phần Security group name điền Private subnet - SG\nTrong phần Description điền Allow SSH and Ping for servers in private subnet.\nchọn VPC, lựa chọn VPC có tên ASG.\nThực hiện cấu hình Inbound rules\nTrong Inbound rules, chọn Add rule.\nChọn Type: SSH và để nguyên Source: Custom. Chọn vào search box và chọn Public subnet SG.Lựa chọn này cho phép tất cả những máy chủ được gán Public subnet SG được SSH vào các máy chủ được gán Private subnet SG.\nChọn Add rule để thêm 1 rule mới.\nChọn Type: All ICMP IPv4 và Source: Anywhere. Cho phép ping từ bất kì địa chỉ IP nào. Chọn Create security group Như vậy chúng ta đã tạo được 2 Security Group cho các máy chủ nằm trong public subnet và private subnet. Tiếp theo chúng ta sẽ tiến hành tạo 2 máy chủ EC2. "
},
{
	"uri": "http://localhost:1313/projects/5-vpnsitetosite/5.2-vpnsitetosite/5.2.5-modifyvpn/_index.vi/",
	"title": "Tùy chỉnh AWS VPN Tunnel",
	"tags": [],
	"description": "",
	"content": "Tùy chỉnh AWS VPN Tunnel Truy cập vào giao diện VPC\nChọn Site-to-Site VPN connections Chọn VPN vừa tạo. Chọn Actions Chọn Modify VPN tunnel options Chọn VPN Tunnel outside IP address Chọn Confirm UP tunnel modification và các thông số còn lại mặc định. Đối với Tunnel activity log, chọn Enable\nChọn Amazon CloudWatch log group (nếu chưa có bạn có thể tạo trong CloudWatch) Đối với Output format, chọn text Chọn Save changes Truy cập vào CloudWatch\nChọn Log groups Chọn Log streams Chọn một stream. Vào xem Log events Bạn thực hiện tương tự với tunnel còn lại. Phải đảm bảo cả 2 tunnel đã UP "
},
{
	"uri": "http://localhost:1313/projects/6-cleanup/",
	"title": "Clean up resources",
	"tags": [],
	"description": "",
	"content": "Clean up resources We will proceed to delete the resources in the following order:\nTerminate EC2 Instances Terminate EC2 instance:\nAccess the Amazon EC2 console at EC2. On the left navigation bar, select \u0026ldquo;Instances.\u0026rdquo; Select all EC2 instances related to the lab. Select Instance state. Select Terminate instance. Confirm termination.\nRemove NAT Gateway and Elastic IP Address Remove NAT Gateway and Elastic IP Address. AWS charges for wasted EIPs, so you need to double-check to avoid unintended charges.\nVisit the Amazon VPC console page at VPC.\nOn the left navigation bar, click \u0026ldquo;NAT Gateway.\u0026rdquo;\nSelect NAT Gateway.\nClick Action.\nClick Delete NAT Gateway.\nType \u0026ldquo;delete.\u0026rdquo;\nClick Delete to confirm the deletion of NAT Gateway.\nDelete Elastic IP Address Continue to delete Elastic IP Address.\nVisit the Amazon VPC console page at VPC.\nOn the left navigation bar, click \u0026ldquo;Elastic IP.\u0026rdquo;\nSelect the Elastic IP Address we created.\nClick Action.\nClick Release Elastic IP Address.\nClick Release.\nDelete the EC2 Instance connection endpoint Access to Endpoint transactions Select Action, select Delete VPC endpoints Enter delete Delete in the following order: VPN Site to Site connection.\nVirtual Private Gateway.\nCustomer Gateway.\nVPC ASG VPN.\nVPC ASG.\n"
},
{
	"uri": "http://localhost:1313/projects/6-cleanup/_index.vi/",
	"title": "Dọn dẹp tài nguyên",
	"tags": [],
	"description": "",
	"content": "Dọn dẹp tài nguyên Chúng ta sẽ tiến hành xóa các tài nguyên theo thứ tự sau\nTerminate các EC2 Instance. Terminate EC2 instance. Truy cập Amazon EC2 console tại địa chỉ EC2. Trên thanh điều hướng bên trái, chọn Intances Chọn tất cả EC2 Instance liên quan tới bài lab. Chọn Instance state Chọn Terminate instance Xác nhận terminate. Xóa NAT Gateway, Elastic IP Address Xóa NAT Gateway và Elastic IP Address. AWS sẽ thu tiền cho các EIP lãng phí nên bạn cần kiểm tra kỹ để tránh bị trừ chi phí ngoài ý muốn. Truy cập trang Amazon VPC console tại địa chỉ VPC Trên thanh điều hướng bên trái , click NAT Gateway. Chọn NAT Gateway. Click Action. Click Delete NAT Gateway. Gõ delete. Click Delete để xác nhận xóa NAT Gateway Xóa xóa Elastic IP Address. Tiếp tục xóa Elastic IP Address. Truy cập trang Amazon VPC console tại địa chỉ https://console.aws.amazon.com/vpc/ Trên thanh điều hướng bên trái , click Elastic IP. Chọn Elastic IP Address chúng ta đã tạo. Click Action. Click Release Elastic IP Address Click Release. Xóa EC2 Instance concect endpoint Truy cập vào giao dịch Endpoint Chọn Action, chọn Delete VPC endpoints Nhập delete Tiếp tục làm tương tự và xóa theo thứ tự sau nhé: VPN Site to Site connection. Virtual Private Gateway. Customer Gateway. VPC ASG VPN VPC ASG. "
},
{
	"uri": "http://localhost:1313/projects/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://localhost:1313/projects/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]